Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.2.3.Final}
HHH000206: hibernate.properties not found
HHH000021: Bytecode provider name : javassist
Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD 3.0//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Building session factory using provided StandardServiceRegistry
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@7e0e6aa2
Adding type registration boolean -> org.hibernate.type.BooleanType@7e0e6aa2
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7e0e6aa2
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@782663d3
Adding type registration true_false -> org.hibernate.type.TrueFalseType@2e3fc542
Adding type registration yes_no -> org.hibernate.type.YesNoType@401e7803
Adding type registration byte -> org.hibernate.type.ByteType@3578436e
Adding type registration byte -> org.hibernate.type.ByteType@3578436e
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@3578436e
Adding type registration character -> org.hibernate.type.CharacterType@47db50c5
Adding type registration char -> org.hibernate.type.CharacterType@47db50c5
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47db50c5
Adding type registration short -> org.hibernate.type.ShortType@481a15ff
Adding type registration short -> org.hibernate.type.ShortType@481a15ff
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@481a15ff
Adding type registration integer -> org.hibernate.type.IntegerType@77846d2c
Adding type registration int -> org.hibernate.type.IntegerType@77846d2c
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@77846d2c
Adding type registration long -> org.hibernate.type.LongType@24a35978
Adding type registration long -> org.hibernate.type.LongType@24a35978
Adding type registration java.lang.Long -> org.hibernate.type.LongType@24a35978
Adding type registration float -> org.hibernate.type.FloatType@5204062d
Adding type registration float -> org.hibernate.type.FloatType@5204062d
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5204062d
Adding type registration double -> org.hibernate.type.DoubleType@b3d7190
Adding type registration double -> org.hibernate.type.DoubleType@b3d7190
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b3d7190
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@24b1d79b
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@24b1d79b
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@103f852
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@103f852
Adding type registration string -> org.hibernate.type.StringType@6d3af739
Adding type registration java.lang.String -> org.hibernate.type.StringType@6d3af739
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@71623278
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4b53f538
Adding type registration url -> org.hibernate.type.UrlType@1068e947
Adding type registration java.net.URL -> org.hibernate.type.UrlType@1068e947
Adding type registration Duration -> org.hibernate.type.DurationType@6483f5ae
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6483f5ae
Adding type registration Instant -> org.hibernate.type.InstantType@2473b9ce
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2473b9ce
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@71d15f18
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@71d15f18
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@2df32bf7
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@2df32bf7
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@70a9f84e
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@70a9f84e
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@166fa74d
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@166fa74d
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@77a57272
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@77a57272
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49c43f4e
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49c43f4e
Adding type registration date -> org.hibernate.type.DateType@11c20519
Adding type registration java.sql.Date -> org.hibernate.type.DateType@11c20519
Adding type registration time -> org.hibernate.type.TimeType@365c30cc
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@365c30cc
Adding type registration timestamp -> org.hibernate.type.TimestampType@71a794e5
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@71a794e5
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@71a794e5
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4df828d7
Adding type registration calendar -> org.hibernate.type.CalendarType@31206beb
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@31206beb
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@31206beb
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@23bb8443
Adding type registration locale -> org.hibernate.type.LocaleType@1372ed45
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1372ed45
Adding type registration currency -> org.hibernate.type.CurrencyType@5606c0b
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5606c0b
Adding type registration timezone -> org.hibernate.type.TimeZoneType@12405818
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@12405818
Adding type registration class -> org.hibernate.type.ClassType@453da22c
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@453da22c
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@6e38921c
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@6e38921c
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@49070868
Adding type registration binary -> org.hibernate.type.BinaryType@146044d7
Adding type registration byte[] -> org.hibernate.type.BinaryType@146044d7
Adding type registration [B -> org.hibernate.type.BinaryType@146044d7
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3c0a50da
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3c0a50da
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3c0a50da
Adding type registration row_version -> org.hibernate.type.RowVersionType@221af3c0
Adding type registration image -> org.hibernate.type.ImageType@551bdc27
Adding type registration characters -> org.hibernate.type.CharArrayType@ba8d91c
Adding type registration char[] -> org.hibernate.type.CharArrayType@ba8d91c
Adding type registration [C -> org.hibernate.type.CharArrayType@ba8d91c
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6a472554
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6a472554
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6a472554
Adding type registration text -> org.hibernate.type.TextType@61d47554
Adding type registration ntext -> org.hibernate.type.NTextType@5a4aa2f2
Adding type registration blob -> org.hibernate.type.BlobType@564718df
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@564718df
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@62e136d3
Adding type registration clob -> org.hibernate.type.ClobType@2ea6137
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@2ea6137
Adding type registration nclob -> org.hibernate.type.NClobType@29f69090
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@29f69090
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@589b3632
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@534df152
Adding type registration serializable -> org.hibernate.type.SerializableType@2890c451
Adding type registration object -> org.hibernate.type.ObjectType@20d3d15a
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@20d3d15a
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2c34f934
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@12d3a4e9
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@240237d2
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@25a65b77
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2ed0fbae
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@212bf671
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@14a2f921
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3c87521
HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/baza4
HHH10001001: Connection properties: {user=root}
HHH10001003: Autocommit mode: false
HHH10001007: JDBC isolation level: <unknown>
Database ->
       name : MySQL
    version : 5.5.5-10.1.21-MariaDB
      major : 5
      minor : 5
Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.6 ( Revision: ${svn.Revision} )
      major : 5
      minor : 1
JDBC version : 3.0
HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
JDBC driver metadata reported database stores quoted identifiers in more than one case
IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
HHH000138: Mixing inheritance strategy in a entity hierarchy is not allowed, ignoring sub strategy in: data.Trener
HHH000138: Mixing inheritance strategy in a entity hierarchy is not allowed, ignoring sub strategy in: data.Zawodnik
Binding entity from annotated class: data.Osoba
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Osoba
Bind entity data.Osoba on table OSOBY
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OSOBY), mappingColumn=ID_OSOBY, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Osoba:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OSOBY), mappingColumn=IMIE, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property imie with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Osoba:imie]
building SimpleValue for imie
Building property imie
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OSOBY), mappingColumn=NAZWISKO, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nazwisko with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Osoba:nazwisko]
building SimpleValue for nazwisko
Building property nazwisko
Binding entity from annotated class: data.Druzyna
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Druzyna
Bind entity data.Druzyna on table DRUZYNY
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=ID_DRUZYNY, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Druzyna:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=KRAJ, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property kraj with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Druzyna:kraj]
building SimpleValue for kraj
Building property kraj
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=mecz_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='mecz_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: data.Druzyna.mecz
Building property mecz
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=trener, insertable=true, updatable=true, unique=false}
Building property trener
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='druzyna'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=zawodnicy, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(DRUZYNY), mappingColumn=zawodnicy_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='zawodnicy_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='druzyna'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='druzyna'}
Collection role: data.Druzyna.zawodnicy
Building property zawodnicy
Binding entity from annotated class: data.Mecz
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Mecz
Bind entity data.Mecz on table MECZ
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=ID_MECZU, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Mecz:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=druzyny_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='druzyny_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mecz'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='mecz'}
Collection role: data.Mecz.druzyny
Building property druzyny
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=pozycje_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='pozycje_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='meczs'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='meczs'}
Collection role: data.Mecz.pozycje
Building property pozycje
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=stadion, insertable=true, updatable=true, unique=false}
Building property stadion
Binding column: Ejb3JoinColumn{logicalColumnName='ID_MECZU', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=statystyki, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=statystyki_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='statystyki_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: data.Mecz.statystyki
Building property statystyki
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(MECZ), mappingColumn=TERMIN, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property termin with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Mecz:termin]
building SimpleValue for termin
Building property termin
Binding entity from annotated class: data.RodzajStatystyki
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name RodzajStatystyki
Bind entity data.RodzajStatystyki on table RODZAJSTATYSTYKI
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RODZAJSTATYSTYKI), mappingColumn=ID_RODZAJUSTATYSTYKI, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.RodzajStatystyki:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(RODZAJSTATYSTYKI), mappingColumn=OPIS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property opis with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.RodzajStatystyki:opis]
building SimpleValue for opis
Building property opis
Binding entity from annotated class: data.Stadion
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Stadion
Bind entity data.Stadion on table STADIONY
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STADIONY), mappingColumn=ID_STADIONU, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Stadion:id]
building SimpleValue for id
Building property id
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STADIONY), mappingColumn=LOKALIZACJA, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property lokalizacja with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Stadion:lokalizacja]
building SimpleValue for lokalizacja
Building property lokalizacja
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STADIONY), mappingColumn=NAZWA, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nazwa with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Stadion:nazwa]
building SimpleValue for nazwa
Building property nazwa
Binding entity from annotated class: data.Statystyki
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Statystyki
Bind entity data.Statystyki on table STATYSTYKI
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATYSTYKI), mappingColumn=ID_STATYSTYKI, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Statystyki:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='ID_MECZU', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATYSTYKI), mappingColumn=mecz, insertable=true, updatable=true, unique=false}
Building property mecz
Binding column: Ejb3JoinColumn{logicalColumnName='ID_RODZAJUSTATYSTYKI', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATYSTYKI), mappingColumn=rodzajStatystyki, insertable=true, updatable=true, unique=false}
Building property rodzajStatystyki
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATYSTYKI), mappingColumn=WARTOSC, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property wartosc with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Statystyki:wartosc]
building SimpleValue for wartosc
Building property wartosc
Binding entity from annotated class: data.Trener
Import with entity name Trener
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='trener'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OSOBY), mappingColumn=druzyna, insertable=true, updatable=true, unique=false}
Binding entity from annotated class: data.Zawodnik
Import with entity name Zawodnik
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OSOBY), mappingColumn=druzyna, insertable=true, updatable=true, unique=false}
Building property druzyna
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(OSOBY), mappingColumn=pozycja, insertable=true, updatable=true, unique=false}
Building property pozycja
Binding entity from annotated class: data.Pozycja
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Pozycja
Bind entity data.Pozycja on table POZYCJE
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POZYCJE), mappingColumn=ID_POZYCJI, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Pozycja:id]
building SimpleValue for id
Building property id
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POZYCJE), mappingColumn=mecz, insertable=true, updatable=true, unique=false}
Building property mecz
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POZYCJE), mappingColumn=null, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POZYCJE), mappingColumn=element, insertable=true, updatable=true, unique=false}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POZYCJE), mappingColumn=meczs_KEY, insertable=true, updatable=true, unique=false}
Binding column: Ejb3JoinColumn{logicalColumnName='meczs_KEY', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy=''}
Collection role: data.Pozycja.meczs
Building property meczs
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POZYCJE), mappingColumn=NAZWA, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property nazwa with lazy=false
Attempting to locate auto-apply AttributeConverter for property [data.Pozycja:nazwa]
building SimpleValue for nazwa
Building property nazwa
Binding column: Ejb3JoinColumn{logicalColumnName='ID_ZAWODNIKA', referencedColumn='', mappedBy=''}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(POZYCJE), mappingColumn=zawodnik, insertable=true, updatable=true, unique=false}
Building property zawodnik
Starting fillSimpleValue for id
Starting fillSimpleValue for imie
Starting fillSimpleValue for nazwisko
Starting fillSimpleValue for id
Starting fillSimpleValue for kraj
Starting fillSimpleValue for id
Starting fillSimpleValue for termin
Starting fillSimpleValue for id
Starting fillSimpleValue for opis
Starting fillSimpleValue for id
Starting fillSimpleValue for lokalizacja
Starting fillSimpleValue for nazwa
Starting fillSimpleValue for id
Starting fillSimpleValue for wartosc
Starting fillSimpleValue for id
Starting fillSimpleValue for nazwa
Forcing column [id_osoby] to be non-null as it is part of the primary key for table [osoby]
Forcing column [id_druzyny] to be non-null as it is part of the primary key for table [druzyny]
Forcing column [id_meczu] to be non-null as it is part of the primary key for table [mecz]
Forcing column [id_rodzajustatystyki] to be non-null as it is part of the primary key for table [rodzajstatystyki]
Forcing column [id_stadionu] to be non-null as it is part of the primary key for table [stadiony]
Forcing column [id_statystyki] to be non-null as it is part of the primary key for table [statystyki]
Forcing column [id_pozycji] to be non-null as it is part of the primary key for table [pozycje]
Second pass for collection: data.Pozycja.meczs
Binding as ManyToMany: data.Pozycja.meczs
Mapped collection key: pozycje_ID_POZYCJI, element: meczs_ID_MECZU
Second pass for collection: data.Mecz.statystyki
Binding a OneToMany: data.Mecz.statystyki through a foreign key
Mapping collection: data.Mecz.statystyki -> STATYSTYKI
Mapped collection key: ID_MECZU, one-to-many: data.Statystyki
Second pass for collection: data.Druzyna.mecz
Binding as ManyToMany: data.Druzyna.mecz
Forcing column [druzyny_id_druzyny] to be non-null as it is part of the primary key for table [druzyny_mecz]
Forcing column [mecz_id_meczu] to be non-null as it is part of the primary key for table [druzyny_mecz]
Mapped collection key: druzyny_ID_DRUZYNY, element: mecz_ID_MECZU
Second pass for collection: data.Druzyna.zawodnicy
Binding a OneToMany: data.Druzyna.zawodnicy through a foreign key
Mapping collection: data.Druzyna.zawodnicy -> OSOBY
Retrieving property data.Zawodnik.druzyna
Mapped collection key: druzyna_ID_DRUZYNY, one-to-many: data.Zawodnik
Second pass for collection: data.Mecz.druzyny
Binding as ManyToMany: data.Mecz.druzyny
Retrieving property data.Druzyna.mecz
Mapped collection key: mecz_ID_MECZU, element: druzyny_ID_DRUZYNY
Second pass for collection: data.Mecz.pozycje
Binding as ManyToMany: data.Mecz.pozycje
Retrieving property data.Pozycja.meczs
Mapped collection key: meczs_ID_MECZU, element: pozycje_ID_POZYCJI
Building property druzyna
Processing association property references
Resolving reference to class: data.Trener
Resolving reference to class: data.Mecz
Resolving reference to class: data.Druzyna
Resolving reference to class: data.Stadion
Resolving reference to class: data.Druzyna
Resolving reference to class: data.Pozycja
Resolving reference to class: data.Mecz
Resolving reference to class: data.Zawodnik
Resolving reference to class: data.Mecz
Resolving reference to class: data.Pozycja
Resolving reference to class: data.Mecz
Resolving reference to class: data.RodzajStatystyki
Processing association property references
Resolving reference to class: data.Trener
Resolving reference to class: data.Mecz
Resolving reference to class: data.Druzyna
Resolving reference to class: data.Stadion
Resolving reference to class: data.Druzyna
Resolving reference to class: data.Pozycja
Resolving reference to class: data.Mecz
Resolving reference to class: data.Zawodnik
Resolving reference to class: data.Mecz
Resolving reference to class: data.Pozycja
Resolving reference to class: data.Mecz
Resolving reference to class: data.RodzajStatystyki
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: 2
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
JPA query language strict compliance: disabled
Named query checking : enabled
Second-level cache: enabled
Second-level query cache: disabled
Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1c852c0f
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=30, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\antlr-2.7.7.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\c3p0-0.9.2.1.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\cdi-api-1.1.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\classmate-1.3.0.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\dom4j-1.6.1.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\el-api-2.2.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\geronimo-jta_1.1_spec-1.1.1.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\hibernate-c3p0-5.2.3.Final.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\hibernate-core-5.2.3.Final.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\jandex-2.0.0.Final.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\javassist-3.20.0-GA.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\javax.inject-1.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\jboss-logging-3.3.0.Final.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\jsr250-api-1.0.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\log4j-1.2.16.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\mchange-commons-java-0.2.3.4.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\mysql-connector-java-5.1.6.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\slf4j-api-1.7.7.jar;C:\Users\lukasz.jamroz\Downloads\biblioteki 5.2.3\biblioteki 5.2.3\slf4j-log4j12-1.7.7.jar;C:\Users\lukasz.jamroz\Downloads\RGLJ_I_O_R\RGLJ_I_O_R\build\classes, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, os.name=Windows 10, java.vm.specification.version=1.8, hibernate.generate_statistics=false, user.country=PL, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_102\jre\bin, sun.java.command=rglj_i_o_r.RGLJ_I_O_R, sun.cpu.endian=little, hibernate.c3p0.max_statements=10, user.home=C:\Users\lukasz.jamroz, user.language=pl, java.specification.vendor=Oracle Corporation, hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider, java.home=C:\Program Files\Java\jdk1.8.0_102\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_102\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_102\jre\classes, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_102-b14, user.name=lukasz.jamroz, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_102\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/baza4, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.current_session_context_class=thread, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\LUKASZ~1.JAM\AppData\Local\Temp\, java.version=1.8.0_102, user.dir=C:\Users\lukasz.jamroz\Downloads\RGLJ_I_O_R\RGLJ_I_O_R, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@42530531, java.library.path=C:\Program Files\Java\jdk1.8.0_102\jre\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\Windows Kits\10\Windows Performance Toolkit\;C:\Users\lukasz.jamroz\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\Microsoft SQL Server\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SDKs\TypeScript\1.0\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Windows\SysWOW64\WindowsPowerShell\v1.0\Modules\TShell\TShell\;C:\Program Files\Git\cmd;C:\xampp_PHP7\php;C:\ProgramData\ComposerSetup\bin;C:\Program Files\nodejs\;C:\Users\lukasz.jamroz\AppData\Roaming\npm;C:\Program Files\PuTTY\;C:\Program Files\CMake\bin;C:\Ruby23-x64\bin;C:\Users\lukasz.jamroz\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Java\jre6\bin\client\;C:\Users\lukasz.jamroz\AppData\Roaming\Composer\vendor\bin;C:\xampp_PHP7\php;C:\Program Files (x86)\CVSNT\;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.102-b14, hibernate.bytecode.use_reflection_optimizer=false, hibernate.connection.pool_size=5, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Not known whether passed class name [data.Mecz] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Mecz
Not known whether passed class name [data.Mecz] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Mecz
Not known whether passed class name [data.RodzajStatystyki] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.RodzajStatystyki
Not known whether passed class name [data.RodzajStatystyki] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.RodzajStatystyki
Not known whether passed class name [data.Osoba] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Osoba
Not known whether passed class name [data.Trener] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Trener
Not known whether passed class name [data.Trener] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Trener
Not known whether passed class name [data.Druzyna] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Druzyna
Not known whether passed class name [data.Druzyna] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Druzyna
Not known whether passed class name [data.Statystyki] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Statystyki
Not known whether passed class name [data.Statystyki] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Statystyki
Not known whether passed class name [data.Stadion] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Stadion
Not known whether passed class name [data.Stadion] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Stadion
Not known whether passed class name [data.Osoba] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Osoba
Not known whether passed class name [data.Zawodnik] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Zawodnik
Not known whether passed class name [data.Zawodnik] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Zawodnik
Not known whether passed class name [data.Pozycja] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Pozycja
Not known whether passed class name [data.Pozycja] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : data.Pozycja
Static SQL for collection: data.Mecz.pozycje
 Row insert: insert into POZYCJE_MECZ (meczs_ID_MECZU, pozycje_ID_POZYCJI) values (?, ?)
 Row update: update POZYCJE_MECZ set pozycje_ID_POZYCJI=? where meczs_ID_MECZU=? and pozycje_ID_POZYCJI=?
 Row delete: delete from POZYCJE_MECZ where meczs_ID_MECZU=? and pozycje_ID_POZYCJI=?
 One-shot delete: delete from POZYCJE_MECZ where meczs_ID_MECZU=?
Static SQL for collection: data.Mecz.druzyny
 Row insert: insert into DRUZYNY_MECZ (mecz_ID_MECZU, druzyny_ID_DRUZYNY) values (?, ?)
 Row update: update DRUZYNY_MECZ set druzyny_ID_DRUZYNY=? where mecz_ID_MECZU=? and druzyny_ID_DRUZYNY=?
 Row delete: delete from DRUZYNY_MECZ where mecz_ID_MECZU=? and druzyny_ID_DRUZYNY=?
 One-shot delete: delete from DRUZYNY_MECZ where mecz_ID_MECZU=?
Static SQL for collection: data.Pozycja.meczs
 Row insert: insert into POZYCJE_MECZ (pozycje_ID_POZYCJI, meczs_ID_MECZU) values (?, ?)
 Row update: update POZYCJE_MECZ set meczs_ID_MECZU=? where pozycje_ID_POZYCJI=? and meczs_ID_MECZU=?
 Row delete: delete from POZYCJE_MECZ where pozycje_ID_POZYCJI=? and meczs_ID_MECZU=?
 One-shot delete: delete from POZYCJE_MECZ where pozycje_ID_POZYCJI=?
Static SQL for collection: data.Mecz.statystyki
 Row insert: update STATYSTYKI set ID_MECZU=? where ID_STATYSTYKI=?
 Row update: update STATYSTYKI set  where ID_STATYSTYKI=?
 Row delete: update STATYSTYKI set ID_MECZU=null where ID_MECZU=? and ID_STATYSTYKI=?
 One-shot delete: update STATYSTYKI set ID_MECZU=null where ID_MECZU=?
Static SQL for collection: data.Druzyna.zawodnicy
 Row insert: update OSOBY set druzyna_ID_DRUZYNY=? where ID_OSOBY=?
 Row update: update OSOBY set  where ID_OSOBY=?
 Row delete: update OSOBY set druzyna_ID_DRUZYNY=null where druzyna_ID_DRUZYNY=? and ID_OSOBY=?
 One-shot delete: update OSOBY set druzyna_ID_DRUZYNY=null where druzyna_ID_DRUZYNY=?
Static SQL for collection: data.Druzyna.mecz
 Row insert: insert into DRUZYNY_MECZ (druzyny_ID_DRUZYNY, mecz_ID_MECZU) values (?, ?)
 Row update: update DRUZYNY_MECZ set mecz_ID_MECZU=? where druzyny_ID_DRUZYNY=? and mecz_ID_MECZU=?
 Row delete: delete from DRUZYNY_MECZ where druzyny_ID_DRUZYNY=? and mecz_ID_MECZU=?
 One-shot delete: delete from DRUZYNY_MECZ where druzyny_ID_DRUZYNY=?
Static SQL for entity: data.Mecz
 Version select: select ID_MECZU from MECZ where ID_MECZU =?
 Snapshot select: select mecz_.ID_MECZU, mecz_.stadion_ID_STADIONU as stadion_3_2_, mecz_.TERMIN as TERMIN2_2_ from MECZ mecz_ where mecz_.ID_MECZU=?
 Insert 0: insert into MECZ (stadion_ID_STADIONU, TERMIN, ID_MECZU) values (?, ?, ?)
 Update 0: update MECZ set stadion_ID_STADIONU=?, TERMIN=? where ID_MECZU=?
 Delete 0: delete from MECZ where ID_MECZU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f8285e]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40dff0b7]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@302a07d]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e8dcdaa]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@681a8b4e]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cbe877d]
Visiting attribute path : stadion.lokalizacja
Visiting attribute path : stadion.nazwa
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3cc41abc]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4566d049]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}
          - JOIN (JoinDefinedByMetadata(stadion)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=data.Stadion)
                - SQL table alias mapping - stadion1_
                - alias suffix - 1_
                - suffixed key columns - {ID_STADI1_7_1_}

Static select for entity data.Mecz [NONE]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_, stadion1_.ID_STADIONU as ID_STADI1_7_1_, stadion1_.LOKALIZACJA as LOKALIZA2_7_1_, stadion1_.NAZWA as NAZWA3_7_1_ from MECZ mecz0_ left outer join STADIONY stadion1_ on mecz0_.stadion_ID_STADIONU=stadion1_.ID_STADIONU where mecz0_.ID_MECZU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485e36bc]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a79d4b1]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e9fda69]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17cdf2d0]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1755e85b]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736d6a5c]
Visiting attribute path : stadion.lokalizacja
Visiting attribute path : stadion.nazwa
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b529706]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63fdab07]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}
          - JOIN (JoinDefinedByMetadata(stadion)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=data.Stadion)
                - SQL table alias mapping - stadion1_
                - alias suffix - 1_
                - suffixed key columns - {ID_STADI1_7_1_}

Static select for entity data.Mecz [READ]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_, stadion1_.ID_STADIONU as ID_STADI1_7_1_, stadion1_.LOKALIZACJA as LOKALIZA2_7_1_, stadion1_.NAZWA as NAZWA3_7_1_ from MECZ mecz0_ left outer join STADIONY stadion1_ on mecz0_.stadion_ID_STADIONU=stadion1_.ID_STADIONU where mecz0_.ID_MECZU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b5a12ae]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1af687fe]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14dda234]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f390d63]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74a6a609]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a411614]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2374d36a]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d18072]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [UPGRADE]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1506f20f]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@424fd310]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a45193b]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38f116f6]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5286c33a]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e6d5d29]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c530d1e]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c25e6c4]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [UPGRADE_NOWAIT]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@85e6769]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@48a12036]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@bf1ec20]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70efb718]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b70da4c]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a11eb84]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e858e0a]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435fb7b5]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [UPGRADE_SKIPLOCKED]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e70a728]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@696f0212]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5733f295]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c3146bc]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c698e3]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a86fbb]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@f478a81]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19553973]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [FORCE]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bb6ab3a]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4c4748bf]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce97ee5]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32c8e539]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73dce0e6]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a85c92]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@32811494]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4795ded0]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [PESSIMISTIC_READ]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53dacd14]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2eced48b]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47c4ecdc]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42f33b5d]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c8504fd]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b7e96a]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6475472c]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f07b12c]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [PESSIMISTIC_WRITE]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd1f8dd]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e14c16d]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c989952]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@784b990c]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d3ba765]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25bc0606]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5d1659ea]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@793138bd]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [PESSIMISTIC_FORCE_INCREMENT]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1951b871]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33aeca0b]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43aaf813]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57ac5227]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba302e0]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e98770d]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ae67cad]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6e28bc]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [OPTIMISTIC]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c098bb3]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@18cebaa5]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@463b4ac8]
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@765f05af]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f68dff]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f001896]
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13f17eb4]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0d6318]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Mecz)
    - Returns
       - EntityReturnImpl(entity=data.Mecz, querySpaceUid=<gen:0>, path=data.Mecz)
          - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:1>, path=data.Mecz.druzyny)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:2>, path=data.Mecz.druzyny.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:3>, path=data.Mecz.pozycje)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:4>, path=data.Mecz.pozycje.<elements>)
          - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=data.Mecz.stadion)
          - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=data.Mecz.statystyki)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=data.Mecz.statystyki.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU1_2_0_}

Static select for entity data.Mecz [OPTIMISTIC_FORCE_INCREMENT]: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=?
Static select for action ACTION_MERGE on entity data.Mecz: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=?
Static select for action ACTION_REFRESH on entity data.Mecz: select mecz0_.ID_MECZU as ID_MECZU1_2_0_, mecz0_.stadion_ID_STADIONU as stadion_3_2_0_, mecz0_.TERMIN as TERMIN2_2_0_ from MECZ mecz0_ where mecz0_.ID_MECZU=?
Static SQL for entity: data.RodzajStatystyki
 Version select: select ID_RODZAJUSTATYSTYKI from RODZAJSTATYSTYKI where ID_RODZAJUSTATYSTYKI =?
 Snapshot select: select rodzajstat_.ID_RODZAJUSTATYSTYKI, rodzajstat_.OPIS as OPIS2_6_ from RODZAJSTATYSTYKI rodzajstat_ where rodzajstat_.ID_RODZAJUSTATYSTYKI=?
 Insert 0: insert into RODZAJSTATYSTYKI (OPIS, ID_RODZAJUSTATYSTYKI) values (?, ?)
 Update 0: update RODZAJSTATYSTYKI set OPIS=? where ID_RODZAJUSTATYSTYKI=?
 Delete 0: delete from RODZAJSTATYSTYKI where ID_RODZAJUSTATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18025ced]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [NONE]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3e4aff]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [READ]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57459491]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [UPGRADE]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77a98a6a]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [UPGRADE_NOWAIT]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e10dc6]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [UPGRADE_SKIPLOCKED]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e37a7e]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [FORCE]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6941827a]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [PESSIMISTIC_READ]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bc9ba1d]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [PESSIMISTIC_WRITE]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7516e4e5]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [PESSIMISTIC_FORCE_INCREMENT]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e81e5ac]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [OPTIMISTIC]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa2213]
Visiting attribute path : opis
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.RodzajStatystyki)
    - Returns
       - EntityReturnImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:0>, path=data.RodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.RodzajStatystyki)
          - SQL table alias mapping - rodzajstat0_
          - alias suffix - 0_
          - suffixed key columns - {ID_RODZA1_6_0_}

Static select for entity data.RodzajStatystyki [OPTIMISTIC_FORCE_INCREMENT]: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Static select for action ACTION_MERGE on entity data.RodzajStatystyki: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Static select for action ACTION_REFRESH on entity data.RodzajStatystyki: select rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_, rodzajstat0_.OPIS as OPIS2_6_0_ from RODZAJSTATYSTYKI rodzajstat0_ where rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Static SQL for entity: data.Trener
 Version select: select ID_OSOBY from OSOBY where ID_OSOBY =?
 Snapshot select: select trener_.ID_OSOBY, trener_.IMIE as IMIE3_3_, trener_.NAZWISKO as NAZWISKO4_3_ from OSOBY trener_ where trener_.ID_OSOBY=?
 Insert 0: insert into OSOBY (IMIE, NAZWISKO, DTYPE, ID_OSOBY) values (?, ?, 'Trener', ?)
 Update 0: update OSOBY set IMIE=?, NAZWISKO=? where ID_OSOBY=?
 Delete 0: delete from OSOBY where ID_OSOBY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0b0a5e]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@320de594]
Visiting attribute path : druzyna.kraj
Visiting attribute path : druzyna.mecz
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@abf688e]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@478ee483]
Visiting attribute path : druzyna.trener
Property path deemed to be circular : druzyna.trener
Visiting attribute path : druzyna.zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58fe0499]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@686449f9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:2>, path=data.Trener.druzyna.mecz)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Trener.druzyna.mecz.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Trener.druzyna.zawodnicy)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Trener.druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}
          - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Druzyna)
                - SQL table alias mapping - druzyna1_
                - alias suffix - 1_
                - suffixed key columns - {ID_DRUZY1_0_1_}

Static select for entity data.Trener [NONE]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_, druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna1_.KRAJ as KRAJ2_0_1_, druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ from OSOBY trener0_ left outer join DRUZYNY druzyna1_ on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener'
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665df3c6]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4044fb95]
Visiting attribute path : druzyna.kraj
Visiting attribute path : druzyna.mecz
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@36f48b4]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c00384f]
Visiting attribute path : druzyna.trener
Property path deemed to be circular : druzyna.trener
Visiting attribute path : druzyna.zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3b7ff809]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb564e2]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:2>, path=data.Trener.druzyna.mecz)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Trener.druzyna.mecz.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Trener.druzyna.zawodnicy)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Trener.druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}
          - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Druzyna)
                - SQL table alias mapping - druzyna1_
                - alias suffix - 1_
                - suffixed key columns - {ID_DRUZY1_0_1_}

Static select for entity data.Trener [READ]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_, druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna1_.KRAJ as KRAJ2_0_1_, druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ from OSOBY trener0_ left outer join DRUZYNY druzyna1_ on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener'
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62e6b5c8]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8233cd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [UPGRADE]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b20ca2b]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6aecbb8d]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [UPGRADE_NOWAIT]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1af146]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8d39c4]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [UPGRADE_SKIPLOCKED]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25b2cfcb]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fb9c7aa]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [FORCE]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c398c80]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21baa903]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [PESSIMISTIC_READ]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener' lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@607fbe09]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29df4d43]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [PESSIMISTIC_WRITE]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd91bca]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3382f8ae]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [PESSIMISTIC_FORCE_INCREMENT]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60641ec8]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eeade6c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [OPTIMISTIC]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener'
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a891c97]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d18aa28]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Trener)
    - Returns
       - EntityReturnImpl(entity=data.Trener, querySpaceUid=<gen:0>, path=data.Trener)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Trener.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Trener)
          - SQL table alias mapping - trener0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Trener [OPTIMISTIC_FORCE_INCREMENT]: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener'
Static select for action ACTION_MERGE on entity data.Trener: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener'
Static select for action ACTION_REFRESH on entity data.Trener: select trener0_.ID_OSOBY as ID_OSOBY2_3_0_, trener0_.IMIE as IMIE3_3_0_, trener0_.NAZWISKO as NAZWISKO4_3_0_ from OSOBY trener0_ where trener0_.ID_OSOBY=? and trener0_.DTYPE='Trener'
Static SQL for entity: data.Druzyna
 Version select: select ID_DRUZYNY from DRUZYNY where ID_DRUZYNY =?
 Snapshot select: select druzyna_.ID_DRUZYNY, druzyna_.KRAJ as KRAJ2_0_, druzyna_.trener_ID_OSOBY as trener_I3_0_ from DRUZYNY druzyna_ where druzyna_.ID_DRUZYNY=?
 Insert 0: insert into DRUZYNY (KRAJ, trener_ID_OSOBY, ID_DRUZYNY) values (?, ?, ?)
 Update 0: update DRUZYNY set KRAJ=?, trener_ID_OSOBY=? where ID_DRUZYNY=?
 Delete 0: delete from DRUZYNY where ID_DRUZYNY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75390459]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2313052e]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd2b28e]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16746061]
Visiting attribute path : trener.imie
Visiting attribute path : trener.nazwisko
Visiting attribute path : trener.druzyna
Property path deemed to be circular : trener.druzyna
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6cfcd46d]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52045dbe]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}
          - JOIN (JoinDefinedByMetadata(trener)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=data.Trener)
                - SQL table alias mapping - trener1_
                - alias suffix - 1_
                - suffixed key columns - {ID_OSOBY2_3_1_}

Static select for entity data.Druzyna [NONE]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_, trener1_.ID_OSOBY as ID_OSOBY2_3_1_, trener1_.IMIE as IMIE3_3_1_, trener1_.NAZWISKO as NAZWISKO4_3_1_ from DRUZYNY druzyna0_ left outer join OSOBY trener1_ on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY where druzyna0_.ID_DRUZYNY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@674658f7]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@565b064f]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26425897]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73163d48]
Visiting attribute path : trener.imie
Visiting attribute path : trener.nazwisko
Visiting attribute path : trener.druzyna
Property path deemed to be circular : trener.druzyna
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56a4479a]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62163b39]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}
          - JOIN (JoinDefinedByMetadata(trener)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=data.Trener)
                - SQL table alias mapping - trener1_
                - alias suffix - 1_
                - suffixed key columns - {ID_OSOBY2_3_1_}

Static select for entity data.Druzyna [READ]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_, trener1_.ID_OSOBY as ID_OSOBY2_3_1_, trener1_.IMIE as IMIE3_3_1_, trener1_.NAZWISKO as NAZWISKO4_3_1_ from DRUZYNY druzyna0_ left outer join OSOBY trener1_ on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY where druzyna0_.ID_DRUZYNY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a8a64e]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1698fc68]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4504d271]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207b8649]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@65b3a85a]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34997338]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [UPGRADE]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57eda880]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53d1b9b3]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cae1042]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163d04ff]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c209437]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2262b621]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [UPGRADE_NOWAIT]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e928e2f]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@788fcafb]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4febb875]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e2a451]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1698ee84]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10c626be]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [UPGRADE_SKIPLOCKED]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc0cc3]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@63b1d4fa]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e3ede4]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201b6b6f]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@75459c75]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183e8023]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [FORCE]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45efc20d]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67ab1c47]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b78a709]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30bcf3c1]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a3c96e3]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15cafec7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [PESSIMISTIC_READ]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b444398]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@42f48531]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a776e]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@792bbc74]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@79145d5a]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2f9244]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [PESSIMISTIC_WRITE]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@338494fa]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@505a9d7c]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758c83d8]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@129b4fe2]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5af3a0f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [PESSIMISTIC_FORCE_INCREMENT]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19ae6bb]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58359ebd]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24b6b8f6]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72cf2de5]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bb7bd00]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f031ebd]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [OPTIMISTIC]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ee37ca3]
Visiting attribute path : kraj
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53812a9b]
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b030a0]
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e350f1]
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@422c3c7a]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18230356]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Druzyna)
    - Returns
       - EntityReturnImpl(entity=data.Druzyna, querySpaceUid=<gen:0>, path=data.Druzyna)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:1>, path=data.Druzyna.mecz)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:2>, path=data.Druzyna.mecz.<elements>)
          - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:3>, path=data.Druzyna.trener)
          - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Druzyna.zawodnicy)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Druzyna.zawodnicy.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Druzyna)
          - SQL table alias mapping - druzyna0_
          - alias suffix - 0_
          - suffixed key columns - {ID_DRUZY1_0_0_}

Static select for entity data.Druzyna [OPTIMISTIC_FORCE_INCREMENT]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=?
Static select for action ACTION_MERGE on entity data.Druzyna: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=?
Static select for action ACTION_REFRESH on entity data.Druzyna: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_0_, druzyna0_.KRAJ as KRAJ2_0_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_0_ from DRUZYNY druzyna0_ where druzyna0_.ID_DRUZYNY=?
Static select for entity data.Druzyna [NONE]: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna0_.KRAJ as KRAJ2_0_1_, druzyna0_.trener_ID_OSOBY as trener_I3_0_1_, trener1_.ID_OSOBY as ID_OSOBY2_3_0_, trener1_.IMIE as IMIE3_3_0_, trener1_.NAZWISKO as NAZWISKO4_3_0_ from DRUZYNY druzyna0_ left outer join OSOBY trener1_ on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY where druzyna0_.trener_ID_OSOBY=?
Static SQL for entity: data.Statystyki
 Version select: select ID_STATYSTYKI from STATYSTYKI where ID_STATYSTYKI =?
 Snapshot select: select statystyki_.ID_STATYSTYKI, statystyki_.ID_MECZU as ID_MECZU3_8_, statystyki_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_, statystyki_.WARTOSC as WARTOSC2_8_ from STATYSTYKI statystyki_ where statystyki_.ID_STATYSTYKI=?
 Insert 0: insert into STATYSTYKI (ID_MECZU, ID_RODZAJUSTATYSTYKI, WARTOSC, ID_STATYSTYKI) values (?, ?, ?, ?)
 Update 0: update STATYSTYKI set ID_MECZU=?, ID_RODZAJUSTATYSTYKI=?, WARTOSC=? where ID_STATYSTYKI=?
 Delete 0: delete from STATYSTYKI where ID_STATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726e5805]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b672daa]
Visiting attribute path : mecz.druzyny
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e077866]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ed3068a]
Visiting attribute path : mecz.pozycje
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c2b6087]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fffff43]
Visiting attribute path : mecz.stadion
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8e6492]
Visiting attribute path : mecz.stadion.lokalizacja
Visiting attribute path : mecz.stadion.nazwa
Visiting attribute path : mecz.statystyki
Property path deemed to be circular : mecz.statystyki
Visiting attribute path : mecz.termin
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b77a04f]
Visiting attribute path : rodzajStatystyki.opis
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
             - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:2>, path=data.Statystyki.mecz.druzyny)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:3>, path=data.Statystyki.mecz.druzyny.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:4>, path=data.Statystyki.mecz.pozycje)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:5>, path=data.Statystyki.mecz.pozycje.<elements>)
             - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:6>, path=data.Statystyki.mecz.stadion)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:7>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}
          - JOIN (JoinDefinedByMetadata(mecz)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Mecz)
                - SQL table alias mapping - mecz1_
                - alias suffix - 1_
                - suffixed key columns - {ID_MECZU1_2_1_}
                - JOIN (JoinDefinedByMetadata(stadion)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Stadion)
                      - SQL table alias mapping - stadion2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_STADI1_7_2_}
          - JOIN (JoinDefinedByMetadata(rodzajStatystyki)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=data.RodzajStatystyki)
                - SQL table alias mapping - rodzajstat3_
                - alias suffix - 3_
                - suffixed key columns - {ID_RODZA1_6_3_}

Static select for entity data.Statystyki [NONE]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_, mecz1_.ID_MECZU as ID_MECZU1_2_1_, mecz1_.stadion_ID_STADIONU as stadion_3_2_1_, mecz1_.TERMIN as TERMIN2_2_1_, stadion2_.ID_STADIONU as ID_STADI1_7_2_, stadion2_.LOKALIZACJA as LOKALIZA2_7_2_, stadion2_.NAZWA as NAZWA3_7_2_, rodzajstat3_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_3_, rodzajstat3_.OPIS as OPIS2_6_3_ from STATYSTYKI statystyki0_ left outer join MECZ mecz1_ on statystyki0_.ID_MECZU=mecz1_.ID_MECZU left outer join STADIONY stadion2_ on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU left outer join RODZAJSTATYSTYKI rodzajstat3_ on statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat3_.ID_RODZAJUSTATYSTYKI where statystyki0_.ID_STATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e11485]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@662f5666]
Visiting attribute path : mecz.druzyny
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5974109]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27305e6]
Visiting attribute path : mecz.pozycje
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ef3efa8]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f1f4c]
Visiting attribute path : mecz.stadion
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f9349]
Visiting attribute path : mecz.stadion.lokalizacja
Visiting attribute path : mecz.stadion.nazwa
Visiting attribute path : mecz.statystyki
Property path deemed to be circular : mecz.statystyki
Visiting attribute path : mecz.termin
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7446d8d5]
Visiting attribute path : rodzajStatystyki.opis
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
             - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:2>, path=data.Statystyki.mecz.druzyny)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:3>, path=data.Statystyki.mecz.druzyny.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:4>, path=data.Statystyki.mecz.pozycje)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:5>, path=data.Statystyki.mecz.pozycje.<elements>)
             - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:6>, path=data.Statystyki.mecz.stadion)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:7>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}
          - JOIN (JoinDefinedByMetadata(mecz)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Mecz)
                - SQL table alias mapping - mecz1_
                - alias suffix - 1_
                - suffixed key columns - {ID_MECZU1_2_1_}
                - JOIN (JoinDefinedByMetadata(stadion)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Stadion)
                      - SQL table alias mapping - stadion2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_STADI1_7_2_}
          - JOIN (JoinDefinedByMetadata(rodzajStatystyki)) : <gen:0> -> <gen:7>
             - EntityQuerySpaceImpl(uid=<gen:7>, entity=data.RodzajStatystyki)
                - SQL table alias mapping - rodzajstat3_
                - alias suffix - 3_
                - suffixed key columns - {ID_RODZA1_6_3_}

Static select for entity data.Statystyki [READ]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_, mecz1_.ID_MECZU as ID_MECZU1_2_1_, mecz1_.stadion_ID_STADIONU as stadion_3_2_1_, mecz1_.TERMIN as TERMIN2_2_1_, stadion2_.ID_STADIONU as ID_STADI1_7_2_, stadion2_.LOKALIZACJA as LOKALIZA2_7_2_, stadion2_.NAZWA as NAZWA3_7_2_, rodzajstat3_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_3_, rodzajstat3_.OPIS as OPIS2_6_3_ from STATYSTYKI statystyki0_ left outer join MECZ mecz1_ on statystyki0_.ID_MECZU=mecz1_.ID_MECZU left outer join STADIONY stadion2_ on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU left outer join RODZAJSTATYSTYKI rodzajstat3_ on statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat3_.ID_RODZAJUSTATYSTYKI where statystyki0_.ID_STATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fbda97b]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b70343]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306851c7]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [UPGRADE]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bcd0c0]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47db5fa5]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354fc8f0]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [UPGRADE_NOWAIT]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41813449]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b43fbf6]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1080b026]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [UPGRADE_SKIPLOCKED]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58ebfd03]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdfafd2]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4b2d8f]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [FORCE]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcfda20]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f73dcd6]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c87bfe2]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [PESSIMISTIC_READ]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fea7088]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cd7ffc]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d4b288]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [PESSIMISTIC_WRITE]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cc6fa2a]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a791b66]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f2cb653]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [PESSIMISTIC_FORCE_INCREMENT]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c01636]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b9ce1bf]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61884cb1]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [OPTIMISTIC]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ed9710]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435871cb]
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@609640d5]
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Statystyki)
    - Returns
       - EntityReturnImpl(entity=data.Statystyki, querySpaceUid=<gen:0>, path=data.Statystyki)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Statystyki.mecz)
          - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=data.Statystyki.rodzajStatystyki)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STATY1_8_0_}

Static select for entity data.Statystyki [OPTIMISTIC_FORCE_INCREMENT]: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=?
Static select for action ACTION_MERGE on entity data.Statystyki: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=?
Static select for action ACTION_REFRESH on entity data.Statystyki: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_0_, statystyki0_.WARTOSC as WARTOSC2_8_0_ from STATYSTYKI statystyki0_ where statystyki0_.ID_STATYSTYKI=?
Static SQL for entity: data.Stadion
 Version select: select ID_STADIONU from STADIONY where ID_STADIONU =?
 Snapshot select: select stadion_.ID_STADIONU, stadion_.LOKALIZACJA as LOKALIZA2_7_, stadion_.NAZWA as NAZWA3_7_ from STADIONY stadion_ where stadion_.ID_STADIONU=?
 Insert 0: insert into STADIONY (LOKALIZACJA, NAZWA, ID_STADIONU) values (?, ?, ?)
 Update 0: update STADIONY set LOKALIZACJA=?, NAZWA=? where ID_STADIONU=?
 Delete 0: delete from STADIONY where ID_STADIONU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79da1ec0]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [NONE]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192d74fb]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [READ]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ea3440]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [UPGRADE]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@556d0826]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [UPGRADE_NOWAIT]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55b5f5d2]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [UPGRADE_SKIPLOCKED]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@666b83a4]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [FORCE]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@efde75f]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [PESSIMISTIC_READ]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b220bcb]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [PESSIMISTIC_WRITE]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a3329b9]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [PESSIMISTIC_FORCE_INCREMENT]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@160ac7fb]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [OPTIMISTIC]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41925502]
Visiting attribute path : lokalizacja
Visiting attribute path : nazwa
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Stadion)
    - Returns
       - EntityReturnImpl(entity=data.Stadion, querySpaceUid=<gen:0>, path=data.Stadion)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Stadion)
          - SQL table alias mapping - stadion0_
          - alias suffix - 0_
          - suffixed key columns - {ID_STADI1_7_0_}

Static select for entity data.Stadion [OPTIMISTIC_FORCE_INCREMENT]: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=?
Static select for action ACTION_MERGE on entity data.Stadion: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=?
Static select for action ACTION_REFRESH on entity data.Stadion: select stadion0_.ID_STADIONU as ID_STADI1_7_0_, stadion0_.LOKALIZACJA as LOKALIZA2_7_0_, stadion0_.NAZWA as NAZWA3_7_0_ from STADIONY stadion0_ where stadion0_.ID_STADIONU=?
Static SQL for entity: data.Osoba
 Version select: select ID_OSOBY from OSOBY where ID_OSOBY =?
 Snapshot select: select osoba_.ID_OSOBY, osoba_.IMIE as IMIE3_3_, osoba_.NAZWISKO as NAZWISKO4_3_ from OSOBY osoba_ where osoba_.ID_OSOBY=?
 Insert 0: insert into OSOBY (IMIE, NAZWISKO, DTYPE, ID_OSOBY) values (?, ?, 'Osoba', ?)
 Update 0: update OSOBY set IMIE=?, NAZWISKO=? where ID_OSOBY=?
 Delete 0: delete from OSOBY where ID_OSOBY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5316e95f]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c6c5427]
Visiting attribute path : druzyna.kraj
Visiting attribute path : druzyna.mecz
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b40ceb]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c3c1e1]
Visiting attribute path : druzyna.trener
Property path deemed to be circular : druzyna.trener
Visiting attribute path : druzyna.zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d8062d2]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e63ec0b]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b956878]
Visiting attribute path : pozycja.mecz
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285c08c8]
Visiting attribute path : pozycja.mecz.druzyny
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3918c187]
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c88b9fc]
Visiting attribute path : pozycja.mecz.pozycje
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64dafeed]
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388ba540]
Visiting attribute path : pozycja.mecz.stadion
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47605f2f]
Visiting attribute path : pozycja.mecz.statystyki
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2ece4966]
Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dd0e7c4]
Visiting attribute path : pozycja.mecz.termin
Visiting attribute path : pozycja.meczs
Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7894f09b]
Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d484181]
Visiting attribute path : pozycja.nazwa
Visiting attribute path : pozycja.zawodnik
Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6111ba37]
Visiting attribute path : pozycja.zawodnik.imie
Visiting attribute path : pozycja.zawodnik.nazwisko
Visiting attribute path : pozycja.zawodnik.druzyna
Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242aa8d9]
Visiting attribute path : pozycja.zawodnik.pozycja
Property path deemed to be circular : pozycja.zawodnik.pozycja
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:2>, path=data.Osoba.druzyna.mecz)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Osoba.druzyna.mecz.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Osoba.druzyna.zawodnicy)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Osoba.druzyna.zawodnicy.<elements>)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:6>, path=data.Osoba.pozycja)
             - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:7>, path=data.Osoba.pozycja.mecz)
                - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:8>, path=data.Osoba.pozycja.mecz.druzyny)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:9>, path=data.Osoba.pozycja.mecz.druzyny.<elements>)
                - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:10>, path=data.Osoba.pozycja.mecz.pozycje)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:11>, path=data.Osoba.pozycja.mecz.pozycje.<elements>)
                - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:12>, path=data.Osoba.pozycja.mecz.stadion)
                - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:13>, path=data.Osoba.pozycja.mecz.statystyki)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:14>, path=data.Osoba.pozycja.mecz.statystyki.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:15>, path=data.Osoba.pozycja.meczs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:16>, path=data.Osoba.pozycja.meczs.<elements>)
             - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:17>, path=data.Osoba.pozycja.zawodnik)
                - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:18>, path=data.Osoba.pozycja.zawodnik.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}
          - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Druzyna)
                - SQL table alias mapping - druzyna1_
                - alias suffix - 1_
                - suffixed key columns - {ID_DRUZY1_0_1_}
          - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Pozycja)
                - SQL table alias mapping - pozycja2_
                - alias suffix - 2_
                - suffixed key columns - {ID_POZYC1_4_2_}
                - JOIN (JoinDefinedByMetadata(mecz)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=data.Mecz)
                      - SQL table alias mapping - mecz3_
                      - alias suffix - 3_
                      - suffixed key columns - {ID_MECZU1_2_3_}
                - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:6> -> <gen:17>
                   - EntityQuerySpaceImpl(uid=<gen:17>, entity=data.Zawodnik)
                      - SQL table alias mapping - zawodnik4_
                      - alias suffix - 4_
                      - suffixed key columns - {ID_OSOBY2_3_4_}

Static select for entity data.Osoba [NONE]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_, druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna1_.KRAJ as KRAJ2_0_1_, druzyna1_.trener_ID_OSOBY as trener_I3_0_1_, pozycja2_.ID_POZYCJI as ID_POZYC1_4_2_, pozycja2_.mecz_ID_MECZU as mecz_ID_3_4_2_, pozycja2_.NAZWA as NAZWA2_4_2_, pozycja2_.ID_ZAWODNIKA as ID_ZAWOD4_4_2_, mecz3_.ID_MECZU as ID_MECZU1_2_3_, mecz3_.stadion_ID_STADIONU as stadion_3_2_3_, mecz3_.TERMIN as TERMIN2_2_3_, zawodnik4_.ID_OSOBY as ID_OSOBY2_3_4_, zawodnik4_.IMIE as IMIE3_3_4_, zawodnik4_.NAZWISKO as NAZWISKO4_3_4_, zawodnik4_.druzyna_ID_DRUZYNY as druzyna_5_3_4_, zawodnik4_.pozycja_ID_POZYCJI as pozycja_6_3_4_ from OSOBY osoba0_ left outer join DRUZYNY druzyna1_ on osoba0_.druzyna_ID_DRUZYNY=druzyna1_.trener_ID_OSOBY left outer join POZYCJE pozycja2_ on osoba0_.pozycja_ID_POZYCJI=pozycja2_.ID_POZYCJI left outer join MECZ mecz3_ on pozycja2_.mecz_ID_MECZU=mecz3_.ID_MECZU left outer join OSOBY zawodnik4_ on pozycja2_.ID_ZAWODNIKA=zawodnik4_.ID_OSOBY where osoba0_.ID_OSOBY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b11a194]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f7cc1d]
Visiting attribute path : druzyna.kraj
Visiting attribute path : druzyna.mecz
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4721d212]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1b065145]
Visiting attribute path : druzyna.trener
Property path deemed to be circular : druzyna.trener
Visiting attribute path : druzyna.zawodnicy
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45cff11c]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207ea13]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bff1903]
Visiting attribute path : pozycja.mecz
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5827af16]
Visiting attribute path : pozycja.mecz.druzyny
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@56c9bbd8]
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@630cb4a4]
Visiting attribute path : pozycja.mecz.pozycje
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@636e8cc]
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f79a760]
Visiting attribute path : pozycja.mecz.stadion
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14f5da2c]
Visiting attribute path : pozycja.mecz.statystyki
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12dae582]
Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@239b0f9d]
Visiting attribute path : pozycja.mecz.termin
Visiting attribute path : pozycja.meczs
Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@619bfe29]
Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b057c8c]
Visiting attribute path : pozycja.nazwa
Visiting attribute path : pozycja.zawodnik
Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1eb6749b]
Visiting attribute path : pozycja.zawodnik.imie
Visiting attribute path : pozycja.zawodnik.nazwisko
Visiting attribute path : pozycja.zawodnik.druzyna
Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b7ea70d]
Visiting attribute path : pozycja.zawodnik.pozycja
Property path deemed to be circular : pozycja.zawodnik.pozycja
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:2>, path=data.Osoba.druzyna.mecz)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Osoba.druzyna.mecz.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:4>, path=data.Osoba.druzyna.zawodnicy)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:5>, path=data.Osoba.druzyna.zawodnicy.<elements>)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:6>, path=data.Osoba.pozycja)
             - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:7>, path=data.Osoba.pozycja.mecz)
                - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:8>, path=data.Osoba.pozycja.mecz.druzyny)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:9>, path=data.Osoba.pozycja.mecz.druzyny.<elements>)
                - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:10>, path=data.Osoba.pozycja.mecz.pozycje)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:11>, path=data.Osoba.pozycja.mecz.pozycje.<elements>)
                - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:12>, path=data.Osoba.pozycja.mecz.stadion)
                - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:13>, path=data.Osoba.pozycja.mecz.statystyki)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:14>, path=data.Osoba.pozycja.mecz.statystyki.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:15>, path=data.Osoba.pozycja.meczs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:16>, path=data.Osoba.pozycja.meczs.<elements>)
             - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:17>, path=data.Osoba.pozycja.zawodnik)
                - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:18>, path=data.Osoba.pozycja.zawodnik.druzyna)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}
          - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Druzyna)
                - SQL table alias mapping - druzyna1_
                - alias suffix - 1_
                - suffixed key columns - {ID_DRUZY1_0_1_}
          - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:0> -> <gen:6>
             - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Pozycja)
                - SQL table alias mapping - pozycja2_
                - alias suffix - 2_
                - suffixed key columns - {ID_POZYC1_4_2_}
                - JOIN (JoinDefinedByMetadata(mecz)) : <gen:6> -> <gen:7>
                   - EntityQuerySpaceImpl(uid=<gen:7>, entity=data.Mecz)
                      - SQL table alias mapping - mecz3_
                      - alias suffix - 3_
                      - suffixed key columns - {ID_MECZU1_2_3_}
                - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:6> -> <gen:17>
                   - EntityQuerySpaceImpl(uid=<gen:17>, entity=data.Zawodnik)
                      - SQL table alias mapping - zawodnik4_
                      - alias suffix - 4_
                      - suffixed key columns - {ID_OSOBY2_3_4_}

Static select for entity data.Osoba [READ]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_, druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna1_.KRAJ as KRAJ2_0_1_, druzyna1_.trener_ID_OSOBY as trener_I3_0_1_, pozycja2_.ID_POZYCJI as ID_POZYC1_4_2_, pozycja2_.mecz_ID_MECZU as mecz_ID_3_4_2_, pozycja2_.NAZWA as NAZWA2_4_2_, pozycja2_.ID_ZAWODNIKA as ID_ZAWOD4_4_2_, mecz3_.ID_MECZU as ID_MECZU1_2_3_, mecz3_.stadion_ID_STADIONU as stadion_3_2_3_, mecz3_.TERMIN as TERMIN2_2_3_, zawodnik4_.ID_OSOBY as ID_OSOBY2_3_4_, zawodnik4_.IMIE as IMIE3_3_4_, zawodnik4_.NAZWISKO as NAZWISKO4_3_4_, zawodnik4_.druzyna_ID_DRUZYNY as druzyna_5_3_4_, zawodnik4_.pozycja_ID_POZYCJI as pozycja_6_3_4_ from OSOBY osoba0_ left outer join DRUZYNY druzyna1_ on osoba0_.druzyna_ID_DRUZYNY=druzyna1_.trener_ID_OSOBY left outer join POZYCJE pozycja2_ on osoba0_.pozycja_ID_POZYCJI=pozycja2_.ID_POZYCJI left outer join MECZ mecz3_ on pozycja2_.mecz_ID_MECZU=mecz3_.ID_MECZU left outer join OSOBY zawodnik4_ on pozycja2_.ID_ZAWODNIKA=zawodnik4_.ID_OSOBY where osoba0_.ID_OSOBY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bef51f2]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30f5a68a]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e1d3956]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [UPGRADE]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2c9ba6]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53f48368]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24d4d7c9]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [UPGRADE_NOWAIT]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f0e995e]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73db4768]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [UPGRADE_SKIPLOCKED]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8c1f44]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c435123]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@50fe837a]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [FORCE]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a62c01e]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce33a58]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78a287ed]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [PESSIMISTIC_READ]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546ccad7]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1623134f]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a527389]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [PESSIMISTIC_WRITE]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@485a3466]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b43529a]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4264b240]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [PESSIMISTIC_FORCE_INCREMENT]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b04476e]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb75258]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c260bdc]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [OPTIMISTIC]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e01201]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76f7d241]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a335fa8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Osoba)
    - Returns
       - EntityReturnImpl(entity=data.Osoba, querySpaceUid=<gen:0>, path=data.Osoba)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Osoba.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Osoba.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Osoba)
          - SQL table alias mapping - osoba0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Osoba [OPTIMISTIC_FORCE_INCREMENT]: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=?
Static select for action ACTION_MERGE on entity data.Osoba: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=?
Static select for action ACTION_REFRESH on entity data.Osoba: select osoba0_.ID_OSOBY as ID_OSOBY2_3_0_, osoba0_.IMIE as IMIE3_3_0_, osoba0_.NAZWISKO as NAZWISKO4_3_0_, osoba0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, osoba0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, osoba0_.DTYPE as DTYPE1_3_0_ from OSOBY osoba0_ where osoba0_.ID_OSOBY=?
Static SQL for entity: data.Pozycja
 Version select: select ID_POZYCJI from POZYCJE where ID_POZYCJI =?
 Snapshot select: select pozycja_.ID_POZYCJI, pozycja_.mecz_ID_MECZU as mecz_ID_3_4_, pozycja_.NAZWA as NAZWA2_4_, pozycja_.ID_ZAWODNIKA as ID_ZAWOD4_4_ from POZYCJE pozycja_ where pozycja_.ID_POZYCJI=?
 Insert 0: insert into POZYCJE (mecz_ID_MECZU, NAZWA, ID_ZAWODNIKA, ID_POZYCJI) values (?, ?, ?, ?)
 Update 0: update POZYCJE set mecz_ID_MECZU=?, NAZWA=?, ID_ZAWODNIKA=? where ID_POZYCJI=?
 Delete 0: delete from POZYCJE where ID_POZYCJI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f363cf5]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4baf352a]
Visiting attribute path : mecz.druzyny
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15eebbff]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22d6f11]
Visiting attribute path : mecz.pozycje
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@30990c1b]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2453f95d]
Visiting attribute path : mecz.stadion
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44828f6b]
Visiting attribute path : mecz.stadion.lokalizacja
Visiting attribute path : mecz.stadion.nazwa
Visiting attribute path : mecz.statystyki
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@553f1d75]
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1d8f9e]
Visiting attribute path : mecz.termin
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e34ace1]
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fe6067]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f071df8]
Visiting attribute path : zawodnik.imie
Visiting attribute path : zawodnik.nazwisko
Visiting attribute path : zawodnik.druzyna
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56ace400]
Visiting attribute path : zawodnik.druzyna.kraj
Visiting attribute path : zawodnik.druzyna.mecz
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@305f7627]
Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d018107]
Visiting attribute path : zawodnik.druzyna.trener
Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cbcf243]
Visiting attribute path : zawodnik.druzyna.zawodnicy
Property path deemed to be circular : zawodnik.druzyna.zawodnicy
Visiting attribute path : zawodnik.pozycja
Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29e6eb25]
Visiting attribute path : zawodnik.pozycja.mecz
Property path deemed to be circular : zawodnik.pozycja.mecz
Visiting attribute path : zawodnik.pozycja.meczs
Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@339bf286]
Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38be305c]
Visiting attribute path : zawodnik.pozycja.nazwa
Visiting attribute path : zawodnik.pozycja.zawodnik
Property path deemed to be circular : zawodnik.pozycja.zawodnik
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
             - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:2>, path=data.Pozycja.mecz.druzyny)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:3>, path=data.Pozycja.mecz.druzyny.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:4>, path=data.Pozycja.mecz.pozycje)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:5>, path=data.Pozycja.mecz.pozycje.<elements>)
             - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:6>, path=data.Pozycja.mecz.stadion)
             - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:7>, path=data.Pozycja.mecz.statystyki)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:8>, path=data.Pozycja.mecz.statystyki.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:9>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:10>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:11>, path=data.Pozycja.zawodnik)
             - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:12>, path=data.Pozycja.zawodnik.druzyna)
                - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:13>, path=data.Pozycja.zawodnik.druzyna.mecz)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:14>, path=data.Pozycja.zawodnik.druzyna.mecz.<elements>)
                - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:15>, path=data.Pozycja.zawodnik.druzyna.trener)
             - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:16>, path=data.Pozycja.zawodnik.pozycja)
                - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:17>, path=data.Pozycja.zawodnik.pozycja.meczs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:18>, path=data.Pozycja.zawodnik.pozycja.meczs.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}
          - JOIN (JoinDefinedByMetadata(mecz)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Mecz)
                - SQL table alias mapping - mecz1_
                - alias suffix - 1_
                - suffixed key columns - {ID_MECZU1_2_1_}
                - JOIN (JoinDefinedByMetadata(stadion)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Stadion)
                      - SQL table alias mapping - stadion2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_STADI1_7_2_}
          - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:0> -> <gen:11>
             - EntityQuerySpaceImpl(uid=<gen:11>, entity=data.Zawodnik)
                - SQL table alias mapping - zawodnik3_
                - alias suffix - 3_
                - suffixed key columns - {ID_OSOBY2_3_3_}
                - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:11> -> <gen:12>
                   - EntityQuerySpaceImpl(uid=<gen:12>, entity=data.Druzyna)
                      - SQL table alias mapping - druzyna4_
                      - alias suffix - 4_
                      - suffixed key columns - {ID_DRUZY1_0_4_}
                - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:11> -> <gen:16>
                   - EntityQuerySpaceImpl(uid=<gen:16>, entity=data.Pozycja)
                      - SQL table alias mapping - pozycja5_
                      - alias suffix - 5_
                      - suffixed key columns - {ID_POZYC1_4_5_}

Static select for entity data.Pozycja [NONE]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_, mecz1_.ID_MECZU as ID_MECZU1_2_1_, mecz1_.stadion_ID_STADIONU as stadion_3_2_1_, mecz1_.TERMIN as TERMIN2_2_1_, stadion2_.ID_STADIONU as ID_STADI1_7_2_, stadion2_.LOKALIZACJA as LOKALIZA2_7_2_, stadion2_.NAZWA as NAZWA3_7_2_, zawodnik3_.ID_OSOBY as ID_OSOBY2_3_3_, zawodnik3_.IMIE as IMIE3_3_3_, zawodnik3_.NAZWISKO as NAZWISKO4_3_3_, zawodnik3_.druzyna_ID_DRUZYNY as druzyna_5_3_3_, zawodnik3_.pozycja_ID_POZYCJI as pozycja_6_3_3_, druzyna4_.ID_DRUZYNY as ID_DRUZY1_0_4_, druzyna4_.KRAJ as KRAJ2_0_4_, druzyna4_.trener_ID_OSOBY as trener_I3_0_4_, pozycja5_.ID_POZYCJI as ID_POZYC1_4_5_, pozycja5_.mecz_ID_MECZU as mecz_ID_3_4_5_, pozycja5_.NAZWA as NAZWA2_4_5_, pozycja5_.ID_ZAWODNIKA as ID_ZAWOD4_4_5_ from POZYCJE pozycja0_ left outer join MECZ mecz1_ on pozycja0_.mecz_ID_MECZU=mecz1_.ID_MECZU left outer join STADIONY stadion2_ on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU left outer join OSOBY zawodnik3_ on pozycja0_.ID_ZAWODNIKA=zawodnik3_.ID_OSOBY left outer join DRUZYNY druzyna4_ on zawodnik3_.druzyna_ID_DRUZYNY=druzyna4_.ID_DRUZYNY left outer join POZYCJE pozycja5_ on zawodnik3_.pozycja_ID_POZYCJI=pozycja5_.ID_POZYCJI where pozycja0_.ID_POZYCJI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@269f4bad]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3234f74e]
Visiting attribute path : mecz.druzyny
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@275fe372]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40e10ff8]
Visiting attribute path : mecz.pozycje
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@557a1e2d]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a4842b]
Visiting attribute path : mecz.stadion
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e38a7fe]
Visiting attribute path : mecz.stadion.lokalizacja
Visiting attribute path : mecz.stadion.nazwa
Visiting attribute path : mecz.statystyki
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33e01298]
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e75d13]
Visiting attribute path : mecz.termin
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a5b0b86]
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b3c354a]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78fb9a67]
Visiting attribute path : zawodnik.imie
Visiting attribute path : zawodnik.nazwisko
Visiting attribute path : zawodnik.druzyna
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21aa6d6c]
Visiting attribute path : zawodnik.druzyna.kraj
Visiting attribute path : zawodnik.druzyna.mecz
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f9a01c1]
Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2611b9a3]
Visiting attribute path : zawodnik.druzyna.trener
Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54227100]
Visiting attribute path : zawodnik.druzyna.zawodnicy
Property path deemed to be circular : zawodnik.druzyna.zawodnicy
Visiting attribute path : zawodnik.pozycja
Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b5894c8]
Visiting attribute path : zawodnik.pozycja.mecz
Property path deemed to be circular : zawodnik.pozycja.mecz
Visiting attribute path : zawodnik.pozycja.meczs
Adding QuerySpace : uid = <gen:17> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f446bef]
Adding QuerySpace : uid = <gen:18> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7829b776]
Visiting attribute path : zawodnik.pozycja.nazwa
Visiting attribute path : zawodnik.pozycja.zawodnik
Property path deemed to be circular : zawodnik.pozycja.zawodnik
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
             - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:2>, path=data.Pozycja.mecz.druzyny)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:3>, path=data.Pozycja.mecz.druzyny.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:4>, path=data.Pozycja.mecz.pozycje)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:5>, path=data.Pozycja.mecz.pozycje.<elements>)
             - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:6>, path=data.Pozycja.mecz.stadion)
             - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:7>, path=data.Pozycja.mecz.statystyki)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:8>, path=data.Pozycja.mecz.statystyki.<elements>)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:9>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:10>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:11>, path=data.Pozycja.zawodnik)
             - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:12>, path=data.Pozycja.zawodnik.druzyna)
                - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:13>, path=data.Pozycja.zawodnik.druzyna.mecz)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:14>, path=data.Pozycja.zawodnik.druzyna.mecz.<elements>)
                - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:15>, path=data.Pozycja.zawodnik.druzyna.trener)
             - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:16>, path=data.Pozycja.zawodnik.pozycja)
                - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:17>, path=data.Pozycja.zawodnik.pozycja.meczs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:18>, path=data.Pozycja.zawodnik.pozycja.meczs.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}
          - JOIN (JoinDefinedByMetadata(mecz)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Mecz)
                - SQL table alias mapping - mecz1_
                - alias suffix - 1_
                - suffixed key columns - {ID_MECZU1_2_1_}
                - JOIN (JoinDefinedByMetadata(stadion)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Stadion)
                      - SQL table alias mapping - stadion2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_STADI1_7_2_}
          - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:0> -> <gen:11>
             - EntityQuerySpaceImpl(uid=<gen:11>, entity=data.Zawodnik)
                - SQL table alias mapping - zawodnik3_
                - alias suffix - 3_
                - suffixed key columns - {ID_OSOBY2_3_3_}
                - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:11> -> <gen:12>
                   - EntityQuerySpaceImpl(uid=<gen:12>, entity=data.Druzyna)
                      - SQL table alias mapping - druzyna4_
                      - alias suffix - 4_
                      - suffixed key columns - {ID_DRUZY1_0_4_}
                - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:11> -> <gen:16>
                   - EntityQuerySpaceImpl(uid=<gen:16>, entity=data.Pozycja)
                      - SQL table alias mapping - pozycja5_
                      - alias suffix - 5_
                      - suffixed key columns - {ID_POZYC1_4_5_}

Static select for entity data.Pozycja [READ]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_, mecz1_.ID_MECZU as ID_MECZU1_2_1_, mecz1_.stadion_ID_STADIONU as stadion_3_2_1_, mecz1_.TERMIN as TERMIN2_2_1_, stadion2_.ID_STADIONU as ID_STADI1_7_2_, stadion2_.LOKALIZACJA as LOKALIZA2_7_2_, stadion2_.NAZWA as NAZWA3_7_2_, zawodnik3_.ID_OSOBY as ID_OSOBY2_3_3_, zawodnik3_.IMIE as IMIE3_3_3_, zawodnik3_.NAZWISKO as NAZWISKO4_3_3_, zawodnik3_.druzyna_ID_DRUZYNY as druzyna_5_3_3_, zawodnik3_.pozycja_ID_POZYCJI as pozycja_6_3_3_, druzyna4_.ID_DRUZYNY as ID_DRUZY1_0_4_, druzyna4_.KRAJ as KRAJ2_0_4_, druzyna4_.trener_ID_OSOBY as trener_I3_0_4_, pozycja5_.ID_POZYCJI as ID_POZYC1_4_5_, pozycja5_.mecz_ID_MECZU as mecz_ID_3_4_5_, pozycja5_.NAZWA as NAZWA2_4_5_, pozycja5_.ID_ZAWODNIKA as ID_ZAWOD4_4_5_ from POZYCJE pozycja0_ left outer join MECZ mecz1_ on pozycja0_.mecz_ID_MECZU=mecz1_.ID_MECZU left outer join STADIONY stadion2_ on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU left outer join OSOBY zawodnik3_ on pozycja0_.ID_ZAWODNIKA=zawodnik3_.ID_OSOBY left outer join DRUZYNY druzyna4_ on zawodnik3_.druzyna_ID_DRUZYNY=druzyna4_.ID_DRUZYNY left outer join POZYCJE pozycja5_ on zawodnik3_.pozycja_ID_POZYCJI=pozycja5_.ID_POZYCJI where pozycja0_.ID_POZYCJI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5778826f]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4763c727]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@72445aba]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61bcd567]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c80e49b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [UPGRADE]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@458342d3]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1252b961]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@9ed238c]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56276db8]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51e8e6e6]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [UPGRADE_NOWAIT]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56f6d40b]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b408dc3]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d098f9b]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2dbf4cbd]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20b5f2ac]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [UPGRADE_SKIPLOCKED]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc44dec]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@293d0107]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2692b61e]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b64240d]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62fad19]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [FORCE]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47dbb1e2]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e54db99]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@55e8ec2f]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2613d1]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d24ffa1]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [PESSIMISTIC_READ]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=? lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65a4798f]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@878452d]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@426b6a74]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c51bb7]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@83298d7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [PESSIMISTIC_WRITE]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42a9e5d1]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@773cbf4f]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6b54655f]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665e9289]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d3430a7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [PESSIMISTIC_FORCE_INCREMENT]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=? for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f603e89]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@350ec41e]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69637b10]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71984c3]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165b2f7f]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [OPTIMISTIC]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5536379e]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c8bca63]
Visiting attribute path : meczs
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2364305a]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@470a696f]
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bc715b8]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Pozycja)
    - Returns
       - EntityReturnImpl(entity=data.Pozycja, querySpaceUid=<gen:0>, path=data.Pozycja)
          - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:1>, path=data.Pozycja.mecz)
          - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:2>, path=data.Pozycja.meczs)
             - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Pozycja.meczs.<elements>)
          - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=data.Pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Pozycja)
          - SQL table alias mapping - pozycja0_
          - alias suffix - 0_
          - suffixed key columns - {ID_POZYC1_4_0_}

Static select for entity data.Pozycja [OPTIMISTIC_FORCE_INCREMENT]: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=?
Static select for action ACTION_MERGE on entity data.Pozycja: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=?
Static select for action ACTION_REFRESH on entity data.Pozycja: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_, pozycja0_.NAZWA as NAZWA2_4_0_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_ from POZYCJE pozycja0_ where pozycja0_.ID_POZYCJI=?
Static SQL for entity: data.Zawodnik
 Version select: select ID_OSOBY from OSOBY where ID_OSOBY =?
 Snapshot select: select zawodnik_.ID_OSOBY, zawodnik_.IMIE as IMIE3_3_, zawodnik_.NAZWISKO as NAZWISKO4_3_, zawodnik_.druzyna_ID_DRUZYNY as druzyna_5_3_, zawodnik_.pozycja_ID_POZYCJI as pozycja_6_3_ from OSOBY zawodnik_ where zawodnik_.ID_OSOBY=?
 Insert 0: insert into OSOBY (IMIE, NAZWISKO, druzyna_ID_DRUZYNY, pozycja_ID_POZYCJI, DTYPE, ID_OSOBY) values (?, ?, ?, ?, 'Zawodnik', ?)
 Update 0: update OSOBY set IMIE=?, NAZWISKO=?, druzyna_ID_DRUZYNY=?, pozycja_ID_POZYCJI=? where ID_OSOBY=?
 Delete 0: delete from OSOBY where ID_OSOBY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@292d1c71]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f1c5af9]
Visiting attribute path : druzyna.kraj
Visiting attribute path : druzyna.mecz
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ddabb18]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e8f7922]
Visiting attribute path : druzyna.trener
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63192798]
Visiting attribute path : druzyna.trener.imie
Visiting attribute path : druzyna.trener.nazwisko
Visiting attribute path : druzyna.trener.druzyna
Property path deemed to be circular : druzyna.trener.druzyna
Visiting attribute path : druzyna.zawodnicy
Property path deemed to be circular : druzyna.zawodnicy
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58e6d4b8]
Visiting attribute path : pozycja.mecz
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@376a312c]
Visiting attribute path : pozycja.mecz.druzyny
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ca0256d]
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ef0d29e]
Visiting attribute path : pozycja.mecz.pozycje
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38f57b3d]
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51850751]
Visiting attribute path : pozycja.mecz.stadion
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ce3db41]
Visiting attribute path : pozycja.mecz.statystyki
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@64df9a61]
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@77602954]
Visiting attribute path : pozycja.mecz.termin
Visiting attribute path : pozycja.meczs
Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@e260766]
Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c3dec30]
Visiting attribute path : pozycja.nazwa
Visiting attribute path : pozycja.zawodnik
Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34a97744]
Visiting attribute path : pozycja.zawodnik.imie
Visiting attribute path : pozycja.zawodnik.nazwisko
Visiting attribute path : pozycja.zawodnik.druzyna
Property path deemed to be circular : pozycja.zawodnik.druzyna
Visiting attribute path : pozycja.zawodnik.pozycja
Property path deemed to be circular : pozycja.zawodnik.pozycja
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:2>, path=data.Zawodnik.druzyna.mecz)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Zawodnik.druzyna.mecz.<elements>)
             - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:4>, path=data.Zawodnik.druzyna.trener)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:5>, path=data.Zawodnik.pozycja)
             - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:6>, path=data.Zawodnik.pozycja.mecz)
                - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:7>, path=data.Zawodnik.pozycja.mecz.druzyny)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:8>, path=data.Zawodnik.pozycja.mecz.druzyny.<elements>)
                - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:9>, path=data.Zawodnik.pozycja.mecz.pozycje)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:10>, path=data.Zawodnik.pozycja.mecz.pozycje.<elements>)
                - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:11>, path=data.Zawodnik.pozycja.mecz.stadion)
                - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:12>, path=data.Zawodnik.pozycja.mecz.statystyki)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:13>, path=data.Zawodnik.pozycja.mecz.statystyki.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:14>, path=data.Zawodnik.pozycja.meczs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:15>, path=data.Zawodnik.pozycja.meczs.<elements>)
             - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:16>, path=data.Zawodnik.pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}
          - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Druzyna)
                - SQL table alias mapping - druzyna1_
                - alias suffix - 1_
                - suffixed key columns - {ID_DRUZY1_0_1_}
                - JOIN (JoinDefinedByMetadata(trener)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=data.Trener)
                      - SQL table alias mapping - trener2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_OSOBY2_3_2_}
          - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=data.Pozycja)
                - SQL table alias mapping - pozycja3_
                - alias suffix - 3_
                - suffixed key columns - {ID_POZYC1_4_3_}
                - JOIN (JoinDefinedByMetadata(mecz)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Mecz)
                      - SQL table alias mapping - mecz4_
                      - alias suffix - 4_
                      - suffixed key columns - {ID_MECZU1_2_4_}
                - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:5> -> <gen:16>
                   - EntityQuerySpaceImpl(uid=<gen:16>, entity=data.Zawodnik)
                      - SQL table alias mapping - zawodnik5_
                      - alias suffix - 5_
                      - suffixed key columns - {ID_OSOBY2_3_5_}

Static select for entity data.Zawodnik [NONE]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna1_.KRAJ as KRAJ2_0_1_, druzyna1_.trener_ID_OSOBY as trener_I3_0_1_, trener2_.ID_OSOBY as ID_OSOBY2_3_2_, trener2_.IMIE as IMIE3_3_2_, trener2_.NAZWISKO as NAZWISKO4_3_2_, pozycja3_.ID_POZYCJI as ID_POZYC1_4_3_, pozycja3_.mecz_ID_MECZU as mecz_ID_3_4_3_, pozycja3_.NAZWA as NAZWA2_4_3_, pozycja3_.ID_ZAWODNIKA as ID_ZAWOD4_4_3_, mecz4_.ID_MECZU as ID_MECZU1_2_4_, mecz4_.stadion_ID_STADIONU as stadion_3_2_4_, mecz4_.TERMIN as TERMIN2_2_4_, zawodnik5_.ID_OSOBY as ID_OSOBY2_3_5_, zawodnik5_.IMIE as IMIE3_3_5_, zawodnik5_.NAZWISKO as NAZWISKO4_3_5_, zawodnik5_.druzyna_ID_DRUZYNY as druzyna_5_3_5_, zawodnik5_.pozycja_ID_POZYCJI as pozycja_6_3_5_ from OSOBY zawodnik0_ left outer join DRUZYNY druzyna1_ on zawodnik0_.druzyna_ID_DRUZYNY=druzyna1_.ID_DRUZYNY left outer join OSOBY trener2_ on druzyna1_.trener_ID_OSOBY=trener2_.ID_OSOBY left outer join POZYCJE pozycja3_ on zawodnik0_.pozycja_ID_POZYCJI=pozycja3_.ID_POZYCJI left outer join MECZ mecz4_ on pozycja3_.mecz_ID_MECZU=mecz4_.ID_MECZU left outer join OSOBY zawodnik5_ on pozycja3_.ID_ZAWODNIKA=zawodnik5_.ID_OSOBY where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik'
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c56e013]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40258c2f]
Visiting attribute path : druzyna.kraj
Visiting attribute path : druzyna.mecz
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6731787b]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16f7b4af]
Visiting attribute path : druzyna.trener
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7adf16aa]
Visiting attribute path : druzyna.trener.imie
Visiting attribute path : druzyna.trener.nazwisko
Visiting attribute path : druzyna.trener.druzyna
Property path deemed to be circular : druzyna.trener.druzyna
Visiting attribute path : druzyna.zawodnicy
Property path deemed to be circular : druzyna.zawodnicy
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58bf8650]
Visiting attribute path : pozycja.mecz
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71ae31b0]
Visiting attribute path : pozycja.mecz.druzyny
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6f0ca692]
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c104774]
Visiting attribute path : pozycja.mecz.pozycje
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2cb3d0f7]
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e517165]
Visiting attribute path : pozycja.mecz.stadion
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44e3760b]
Visiting attribute path : pozycja.mecz.statystyki
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6a66a204]
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5860f3d7]
Visiting attribute path : pozycja.mecz.termin
Visiting attribute path : pozycja.meczs
Adding QuerySpace : uid = <gen:14> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d7f7be7]
Adding QuerySpace : uid = <gen:15> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f3156d]
Visiting attribute path : pozycja.nazwa
Visiting attribute path : pozycja.zawodnik
Adding QuerySpace : uid = <gen:16> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ddae9b5]
Visiting attribute path : pozycja.zawodnik.imie
Visiting attribute path : pozycja.zawodnik.nazwisko
Visiting attribute path : pozycja.zawodnik.druzyna
Property path deemed to be circular : pozycja.zawodnik.druzyna
Visiting attribute path : pozycja.zawodnik.pozycja
Property path deemed to be circular : pozycja.zawodnik.pozycja
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:2>, path=data.Zawodnik.druzyna.mecz)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:3>, path=data.Zawodnik.druzyna.mecz.<elements>)
             - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:4>, path=data.Zawodnik.druzyna.trener)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:5>, path=data.Zawodnik.pozycja)
             - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:6>, path=data.Zawodnik.pozycja.mecz)
                - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:7>, path=data.Zawodnik.pozycja.mecz.druzyny)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:8>, path=data.Zawodnik.pozycja.mecz.druzyny.<elements>)
                - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:9>, path=data.Zawodnik.pozycja.mecz.pozycje)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:10>, path=data.Zawodnik.pozycja.mecz.pozycje.<elements>)
                - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:11>, path=data.Zawodnik.pozycja.mecz.stadion)
                - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:12>, path=data.Zawodnik.pozycja.mecz.statystyki)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:13>, path=data.Zawodnik.pozycja.mecz.statystyki.<elements>)
             - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:14>, path=data.Zawodnik.pozycja.meczs)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:15>, path=data.Zawodnik.pozycja.meczs.<elements>)
             - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:16>, path=data.Zawodnik.pozycja.zawodnik)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}
          - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Druzyna)
                - SQL table alias mapping - druzyna1_
                - alias suffix - 1_
                - suffixed key columns - {ID_DRUZY1_0_1_}
                - JOIN (JoinDefinedByMetadata(trener)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=data.Trener)
                      - SQL table alias mapping - trener2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_OSOBY2_3_2_}
          - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:0> -> <gen:5>
             - EntityQuerySpaceImpl(uid=<gen:5>, entity=data.Pozycja)
                - SQL table alias mapping - pozycja3_
                - alias suffix - 3_
                - suffixed key columns - {ID_POZYC1_4_3_}
                - JOIN (JoinDefinedByMetadata(mecz)) : <gen:5> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=data.Mecz)
                      - SQL table alias mapping - mecz4_
                      - alias suffix - 4_
                      - suffixed key columns - {ID_MECZU1_2_4_}
                - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:5> -> <gen:16>
                   - EntityQuerySpaceImpl(uid=<gen:16>, entity=data.Zawodnik)
                      - SQL table alias mapping - zawodnik5_
                      - alias suffix - 5_
                      - suffixed key columns - {ID_OSOBY2_3_5_}

Static select for entity data.Zawodnik [READ]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_, druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna1_.KRAJ as KRAJ2_0_1_, druzyna1_.trener_ID_OSOBY as trener_I3_0_1_, trener2_.ID_OSOBY as ID_OSOBY2_3_2_, trener2_.IMIE as IMIE3_3_2_, trener2_.NAZWISKO as NAZWISKO4_3_2_, pozycja3_.ID_POZYCJI as ID_POZYC1_4_3_, pozycja3_.mecz_ID_MECZU as mecz_ID_3_4_3_, pozycja3_.NAZWA as NAZWA2_4_3_, pozycja3_.ID_ZAWODNIKA as ID_ZAWOD4_4_3_, mecz4_.ID_MECZU as ID_MECZU1_2_4_, mecz4_.stadion_ID_STADIONU as stadion_3_2_4_, mecz4_.TERMIN as TERMIN2_2_4_, zawodnik5_.ID_OSOBY as ID_OSOBY2_3_5_, zawodnik5_.IMIE as IMIE3_3_5_, zawodnik5_.NAZWISKO as NAZWISKO4_3_5_, zawodnik5_.druzyna_ID_DRUZYNY as druzyna_5_3_5_, zawodnik5_.pozycja_ID_POZYCJI as pozycja_6_3_5_ from OSOBY zawodnik0_ left outer join DRUZYNY druzyna1_ on zawodnik0_.druzyna_ID_DRUZYNY=druzyna1_.ID_DRUZYNY left outer join OSOBY trener2_ on druzyna1_.trener_ID_OSOBY=trener2_.ID_OSOBY left outer join POZYCJE pozycja3_ on zawodnik0_.pozycja_ID_POZYCJI=pozycja3_.ID_POZYCJI left outer join MECZ mecz4_ on pozycja3_.mecz_ID_MECZU=mecz4_.ID_MECZU left outer join OSOBY zawodnik5_ on pozycja3_.ID_ZAWODNIKA=zawodnik5_.ID_OSOBY where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik'
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@24bdb479]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@34625ccd]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c7d121c]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [UPGRADE]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65aa6596]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@419a20a6]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@533377b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [UPGRADE_NOWAIT]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3383649e]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f27ea3]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ce61929]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [UPGRADE_SKIPLOCKED]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@346939bf]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58670130]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74e47444]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [FORCE]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9bd0fa6]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39dcf4b0]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e4de19b]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [PESSIMISTIC_READ]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik' lock in share mode
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f6c03cb]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18518ccf]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1991f767]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [PESSIMISTIC_WRITE]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@768ccdc5]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10650953]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@659eef7]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [PESSIMISTIC_FORCE_INCREMENT]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik' for update
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@162be91c]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c9f0a20]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55787112]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [OPTIMISTIC]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik'
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cd201a8]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1992eaf4]
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f74e835]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=data.Zawodnik)
    - Returns
       - EntityReturnImpl(entity=data.Zawodnik, querySpaceUid=<gen:0>, path=data.Zawodnik)
          - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:1>, path=data.Zawodnik.druzyna)
          - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=data.Zawodnik.pozycja)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=data.Zawodnik)
          - SQL table alias mapping - zawodnik0_
          - alias suffix - 0_
          - suffixed key columns - {ID_OSOBY2_3_0_}

Static select for entity data.Zawodnik [OPTIMISTIC_FORCE_INCREMENT]: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik'
Static select for action ACTION_MERGE on entity data.Zawodnik: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik'
Static select for action ACTION_REFRESH on entity data.Zawodnik: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnik0_.IMIE as IMIE3_3_0_, zawodnik0_.NAZWISKO as NAZWISKO4_3_0_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_0_ from OSOBY zawodnik0_ where zawodnik0_.ID_OSOBY=? and zawodnik0_.DTYPE='Zawodnik'
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@107ed6fc]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1643d68f]
Visiting attribute path : mecz
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@acb0951]
Visiting attribute path : mecz.druzyny
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@267f474e]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a7471ce]
Visiting attribute path : mecz.pozycje
Property path deemed to be circular : mecz.pozycje
Visiting attribute path : mecz.stadion
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28276e50]
Visiting attribute path : mecz.stadion.lokalizacja
Visiting attribute path : mecz.stadion.nazwa
Visiting attribute path : mecz.statystyki
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3efe7086]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675d8c96]
Visiting attribute path : mecz.termin
Visiting attribute path : meczs
Property path deemed to be circular : meczs
Visiting attribute path : nazwa
Visiting attribute path : zawodnik
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@741b3bc3]
Visiting attribute path : zawodnik.imie
Visiting attribute path : zawodnik.nazwisko
Visiting attribute path : zawodnik.druzyna
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63648ee9]
Visiting attribute path : zawodnik.druzyna.kraj
Visiting attribute path : zawodnik.druzyna.mecz
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45be7cd5]
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7651218e]
Visiting attribute path : zawodnik.druzyna.trener
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3185fa6b]
Visiting attribute path : zawodnik.druzyna.zawodnicy
Property path deemed to be circular : zawodnik.druzyna.zawodnicy
Visiting attribute path : zawodnik.pozycja
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d366c9b]
Visiting attribute path : zawodnik.pozycja.mecz
Property path deemed to be circular : zawodnik.pozycja.mecz
Visiting attribute path : zawodnik.pozycja.meczs
Property path deemed to be circular : zawodnik.pozycja.meczs
Visiting attribute path : zawodnik.pozycja.nazwa
Visiting attribute path : zawodnik.pozycja.zawodnik
Property path deemed to be circular : zawodnik.pozycja.zawodnik
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=data.Mecz.pozycje)
    - Returns
       - CollectionReturnImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:0>, path=[data.Mecz.pozycje])
          - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:1>, path=[data.Mecz.pozycje].<elements>)
             - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:2>, path=[data.Mecz.pozycje].<elements>.mecz)
                - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:3>, path=[data.Mecz.pozycje].<elements>.mecz.druzyny)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:4>, path=[data.Mecz.pozycje].<elements>.mecz.druzyny.<elements>)
                - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:5>, path=[data.Mecz.pozycje].<elements>.mecz.stadion)
                - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:6>, path=[data.Mecz.pozycje].<elements>.mecz.statystyki)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:7>, path=[data.Mecz.pozycje].<elements>.mecz.statystyki.<elements>)
             - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:8>, path=[data.Mecz.pozycje].<elements>.zawodnik)
                - EntityAttributeFetchImpl(entity=data.Druzyna, querySpaceUid=<gen:9>, path=[data.Mecz.pozycje].<elements>.zawodnik.druzyna)
                   - CollectionAttributeFetchImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:10>, path=[data.Mecz.pozycje].<elements>.zawodnik.druzyna.mecz)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:11>, path=[data.Mecz.pozycje].<elements>.zawodnik.druzyna.mecz.<elements>)
                   - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:12>, path=[data.Mecz.pozycje].<elements>.zawodnik.druzyna.trener)
                - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:13>, path=[data.Mecz.pozycje].<elements>.zawodnik.pozycja)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=data.Mecz.pozycje)
          - SQL table alias mapping - pozycje0_
          - alias suffix - 0_
          - suffixed key columns - {meczs_ID2_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID_POZYC1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Pozycja)
                - SQL table alias mapping - pozycja1_
                - alias suffix - 1_
                - suffixed key columns - {ID_POZYC1_4_1_}
                - JOIN (JoinDefinedByMetadata(mecz)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=data.Mecz)
                      - SQL table alias mapping - mecz2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_MECZU1_2_2_}
                      - JOIN (JoinDefinedByMetadata(stadion)) : <gen:2> -> <gen:5>
                         - EntityQuerySpaceImpl(uid=<gen:5>, entity=data.Stadion)
                            - SQL table alias mapping - stadion3_
                            - alias suffix - 3_
                            - suffixed key columns - {ID_STADI1_7_3_}
                - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:1> -> <gen:8>
                   - EntityQuerySpaceImpl(uid=<gen:8>, entity=data.Zawodnik)
                      - SQL table alias mapping - zawodnik4_
                      - alias suffix - 4_
                      - suffixed key columns - {ID_OSOBY2_3_4_}
                      - JOIN (JoinDefinedByMetadata(druzyna)) : <gen:8> -> <gen:9>
                         - EntityQuerySpaceImpl(uid=<gen:9>, entity=data.Druzyna)
                            - SQL table alias mapping - druzyna5_
                            - alias suffix - 5_
                            - suffixed key columns - {ID_DRUZY1_0_5_}
                      - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:8> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=data.Pozycja)
                            - SQL table alias mapping - pozycja6_
                            - alias suffix - 6_
                            - suffixed key columns - {ID_POZYC1_4_6_}

Static select for collection data.Mecz.pozycje: select pozycje0_.meczs_ID_MECZU as meczs_ID2_5_0_, pozycje0_.pozycje_ID_POZYCJI as pozycje_1_5_0_, pozycja1_.ID_POZYCJI as ID_POZYC1_4_1_, pozycja1_.mecz_ID_MECZU as mecz_ID_3_4_1_, pozycja1_.NAZWA as NAZWA2_4_1_, pozycja1_.ID_ZAWODNIKA as ID_ZAWOD4_4_1_, mecz2_.ID_MECZU as ID_MECZU1_2_2_, mecz2_.stadion_ID_STADIONU as stadion_3_2_2_, mecz2_.TERMIN as TERMIN2_2_2_, stadion3_.ID_STADIONU as ID_STADI1_7_3_, stadion3_.LOKALIZACJA as LOKALIZA2_7_3_, stadion3_.NAZWA as NAZWA3_7_3_, zawodnik4_.ID_OSOBY as ID_OSOBY2_3_4_, zawodnik4_.IMIE as IMIE3_3_4_, zawodnik4_.NAZWISKO as NAZWISKO4_3_4_, zawodnik4_.druzyna_ID_DRUZYNY as druzyna_5_3_4_, zawodnik4_.pozycja_ID_POZYCJI as pozycja_6_3_4_, druzyna5_.ID_DRUZYNY as ID_DRUZY1_0_5_, druzyna5_.KRAJ as KRAJ2_0_5_, druzyna5_.trener_ID_OSOBY as trener_I3_0_5_, pozycja6_.ID_POZYCJI as ID_POZYC1_4_6_, pozycja6_.mecz_ID_MECZU as mecz_ID_3_4_6_, pozycja6_.NAZWA as NAZWA2_4_6_, pozycja6_.ID_ZAWODNIKA as ID_ZAWOD4_4_6_ from POZYCJE_MECZ pozycje0_ inner join POZYCJE pozycja1_ on pozycje0_.pozycje_ID_POZYCJI=pozycja1_.ID_POZYCJI left outer join MECZ mecz2_ on pozycja1_.mecz_ID_MECZU=mecz2_.ID_MECZU left outer join STADIONY stadion3_ on mecz2_.stadion_ID_STADIONU=stadion3_.ID_STADIONU left outer join OSOBY zawodnik4_ on pozycja1_.ID_ZAWODNIKA=zawodnik4_.ID_OSOBY left outer join DRUZYNY druzyna5_ on zawodnik4_.druzyna_ID_DRUZYNY=druzyna5_.ID_DRUZYNY left outer join POZYCJE pozycja6_ on zawodnik4_.pozycja_ID_POZYCJI=pozycja6_.ID_POZYCJI where pozycje0_.meczs_ID_MECZU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@180e6ac4]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42b64ab8]
Visiting attribute path : kraj
Visiting attribute path : mecz
Property path deemed to be circular : mecz
Visiting attribute path : trener
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@410ae9a3]
Visiting attribute path : trener.imie
Visiting attribute path : trener.nazwisko
Visiting attribute path : trener.druzyna
Property path deemed to be circular : trener.druzyna
Visiting attribute path : zawodnicy
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d5ae57e]
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68759011]
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=data.Mecz.druzyny)
    - Returns
       - CollectionReturnImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:0>, path=[data.Mecz.druzyny])
          - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:1>, path=[data.Mecz.druzyny].<elements>)
             - EntityAttributeFetchImpl(entity=data.Trener, querySpaceUid=<gen:2>, path=[data.Mecz.druzyny].<elements>.trener)
             - CollectionAttributeFetchImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:3>, path=[data.Mecz.druzyny].<elements>.zawodnicy)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:4>, path=[data.Mecz.druzyny].<elements>.zawodnicy.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=data.Mecz.druzyny)
          - SQL table alias mapping - druzyny0_
          - alias suffix - 0_
          - suffixed key columns - {mecz_ID_2_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID_DRUZY1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Druzyna)
                - SQL table alias mapping - druzyna1_
                - alias suffix - 1_
                - suffixed key columns - {ID_DRUZY1_0_1_}
                - JOIN (JoinDefinedByMetadata(trener)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=data.Trener)
                      - SQL table alias mapping - trener2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_OSOBY2_3_2_}

Static select for collection data.Mecz.druzyny: select druzyny0_.mecz_ID_MECZU as mecz_ID_2_1_0_, druzyny0_.druzyny_ID_DRUZYNY as druzyny_1_1_0_, druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_, druzyna1_.KRAJ as KRAJ2_0_1_, druzyna1_.trener_ID_OSOBY as trener_I3_0_1_, trener2_.ID_OSOBY as ID_OSOBY2_3_2_, trener2_.IMIE as IMIE3_3_2_, trener2_.NAZWISKO as NAZWISKO4_3_2_ from DRUZYNY_MECZ druzyny0_ inner join DRUZYNY druzyna1_ on druzyny0_.druzyny_ID_DRUZYNY=druzyna1_.ID_DRUZYNY left outer join OSOBY trener2_ on druzyna1_.trener_ID_OSOBY=trener2_.ID_OSOBY where druzyny0_.mecz_ID_MECZU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e242b4d]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@305f031]
Visiting attribute path : druzyny
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@423e4cbb]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e16b8b5]
Visiting attribute path : pozycje
Property path deemed to be circular : pozycje
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b4fe19]
Visiting attribute path : stadion.lokalizacja
Visiting attribute path : stadion.nazwa
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1536602f]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ebea12c]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=data.Pozycja.meczs)
    - Returns
       - CollectionReturnImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:0>, path=[data.Pozycja.meczs])
          - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:1>, path=[data.Pozycja.meczs].<elements>)
             - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:2>, path=[data.Pozycja.meczs].<elements>.druzyny)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:3>, path=[data.Pozycja.meczs].<elements>.druzyny.<elements>)
             - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:4>, path=[data.Pozycja.meczs].<elements>.stadion)
             - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:5>, path=[data.Pozycja.meczs].<elements>.statystyki)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:6>, path=[data.Pozycja.meczs].<elements>.statystyki.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=data.Pozycja.meczs)
          - SQL table alias mapping - meczs0_
          - alias suffix - 0_
          - suffixed key columns - {pozycje_1_5_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID_MECZU1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Mecz)
                - SQL table alias mapping - mecz1_
                - alias suffix - 1_
                - suffixed key columns - {ID_MECZU1_2_1_}
                - JOIN (JoinDefinedByMetadata(stadion)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=data.Stadion)
                      - SQL table alias mapping - stadion2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_STADI1_7_2_}

Static select for collection data.Pozycja.meczs: select meczs0_.pozycje_ID_POZYCJI as pozycje_1_5_0_, meczs0_.meczs_ID_MECZU as meczs_ID2_5_0_, mecz1_.ID_MECZU as ID_MECZU1_2_1_, mecz1_.stadion_ID_STADIONU as stadion_3_2_1_, mecz1_.TERMIN as TERMIN2_2_1_, stadion2_.ID_STADIONU as ID_STADI1_7_2_, stadion2_.LOKALIZACJA as LOKALIZA2_7_2_, stadion2_.NAZWA as NAZWA3_7_2_ from POZYCJE_MECZ meczs0_ inner join MECZ mecz1_ on meczs0_.meczs_ID_MECZU=mecz1_.ID_MECZU left outer join STADIONY stadion2_ on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU where meczs0_.pozycje_ID_POZYCJI=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2a1edad4]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6256ac4f]
Visiting attribute path : mecz
Property path deemed to be circular : mecz
Visiting attribute path : rodzajStatystyki
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@235f4c10]
Visiting attribute path : rodzajStatystyki.opis
Visiting attribute path : wartosc
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=data.Mecz.statystyki)
    - Returns
       - CollectionReturnImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:0>, path=[data.Mecz.statystyki])
          - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:1>, path=[data.Mecz.statystyki].<elements>)
             - EntityAttributeFetchImpl(entity=data.RodzajStatystyki, querySpaceUid=<gen:2>, path=[data.Mecz.statystyki].<elements>.rodzajStatystyki)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=data.Mecz.statystyki)
          - SQL table alias mapping - statystyki0_
          - alias suffix - 0_
          - suffixed key columns - {ID_MECZU3_8_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID_STATY1_8_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Statystyki)
                - SQL table alias mapping - statystyki0_
                - alias suffix - 1_
                - suffixed key columns - {ID_STATY1_8_1_}
                - JOIN (JoinDefinedByMetadata(rodzajStatystyki)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=data.RodzajStatystyki)
                      - SQL table alias mapping - rodzajstat1_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_RODZA1_6_2_}

Static select for collection data.Mecz.statystyki: select statystyki0_.ID_MECZU as ID_MECZU3_8_0_, statystyki0_.ID_STATYSTYKI as ID_STATY1_8_0_, statystyki0_.ID_STATYSTYKI as ID_STATY1_8_1_, statystyki0_.ID_MECZU as ID_MECZU3_8_1_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_1_, statystyki0_.WARTOSC as WARTOSC2_8_1_, rodzajstat1_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_2_, rodzajstat1_.OPIS as OPIS2_6_2_ from STATYSTYKI statystyki0_ left outer join RODZAJSTATYSTYKI rodzajstat1_ on statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat1_.ID_RODZAJUSTATYSTYKI where statystyki0_.ID_MECZU=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@757d6814]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@649725e3]
Visiting attribute path : imie
Visiting attribute path : nazwisko
Visiting attribute path : druzyna
Property path deemed to be circular : druzyna
Visiting attribute path : pozycja
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52b56a3e]
Visiting attribute path : pozycja.mecz
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eed46ee]
Visiting attribute path : pozycja.mecz.druzyny
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4fad94a7]
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@475835b1]
Visiting attribute path : pozycja.mecz.pozycje
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6326d182]
Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5241cf67]
Visiting attribute path : pozycja.mecz.stadion
Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@716a7124]
Visiting attribute path : pozycja.mecz.statystyki
Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77192705]
Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@226642a5]
Visiting attribute path : pozycja.mecz.termin
Visiting attribute path : pozycja.meczs
Adding QuerySpace : uid = <gen:11> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7e809b79]
Adding QuerySpace : uid = <gen:12> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cc126dc]
Visiting attribute path : pozycja.nazwa
Visiting attribute path : pozycja.zawodnik
Adding QuerySpace : uid = <gen:13> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625e134e]
Visiting attribute path : pozycja.zawodnik.imie
Visiting attribute path : pozycja.zawodnik.nazwisko
Visiting attribute path : pozycja.zawodnik.druzyna
Property path deemed to be circular : pozycja.zawodnik.druzyna
Visiting attribute path : pozycja.zawodnik.pozycja
Property path deemed to be circular : pozycja.zawodnik.pozycja
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=data.Druzyna.zawodnicy)
    - Returns
       - CollectionReturnImpl(collection=data.Druzyna.zawodnicy, querySpaceUid=<gen:0>, path=[data.Druzyna.zawodnicy])
          - (collection element) CollectionFetchableElementEntityGraph(entity=data.Zawodnik, querySpaceUid=<gen:1>, path=[data.Druzyna.zawodnicy].<elements>)
             - EntityAttributeFetchImpl(entity=data.Pozycja, querySpaceUid=<gen:2>, path=[data.Druzyna.zawodnicy].<elements>.pozycja)
                - EntityAttributeFetchImpl(entity=data.Mecz, querySpaceUid=<gen:3>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz)
                   - CollectionAttributeFetchImpl(collection=data.Mecz.druzyny, querySpaceUid=<gen:4>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz.druzyny)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=data.Druzyna, querySpaceUid=<gen:5>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz.druzyny.<elements>)
                   - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:6>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz.pozycje)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:7>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz.pozycje.<elements>)
                   - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:8>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz.stadion)
                   - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:9>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz.statystyki)
                      - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:10>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.mecz.statystyki.<elements>)
                - CollectionAttributeFetchImpl(collection=data.Pozycja.meczs, querySpaceUid=<gen:11>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.meczs)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:12>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.meczs.<elements>)
                - EntityAttributeFetchImpl(entity=data.Zawodnik, querySpaceUid=<gen:13>, path=[data.Druzyna.zawodnicy].<elements>.pozycja.zawodnik)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=data.Druzyna.zawodnicy)
          - SQL table alias mapping - zawodnicy0_
          - alias suffix - 0_
          - suffixed key columns - {druzyna_5_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID_OSOBY2_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Zawodnik)
                - SQL table alias mapping - zawodnicy0_
                - alias suffix - 1_
                - suffixed key columns - {ID_OSOBY2_3_1_}
                - JOIN (JoinDefinedByMetadata(pozycja)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=data.Pozycja)
                      - SQL table alias mapping - pozycja1_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_POZYC1_4_2_}
                      - JOIN (JoinDefinedByMetadata(mecz)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=data.Mecz)
                            - SQL table alias mapping - mecz2_
                            - alias suffix - 3_
                            - suffixed key columns - {ID_MECZU1_2_3_}
                      - JOIN (JoinDefinedByMetadata(zawodnik)) : <gen:2> -> <gen:13>
                         - EntityQuerySpaceImpl(uid=<gen:13>, entity=data.Zawodnik)
                            - SQL table alias mapping - zawodnik3_
                            - alias suffix - 4_
                            - suffixed key columns - {ID_OSOBY2_3_4_}

Static select for collection data.Druzyna.zawodnicy: select zawodnicy0_.druzyna_ID_DRUZYNY as druzyna_5_3_0_, zawodnicy0_.ID_OSOBY as ID_OSOBY2_3_0_, zawodnicy0_.ID_OSOBY as ID_OSOBY2_3_1_, zawodnicy0_.IMIE as IMIE3_3_1_, zawodnicy0_.NAZWISKO as NAZWISKO4_3_1_, zawodnicy0_.druzyna_ID_DRUZYNY as druzyna_5_3_1_, zawodnicy0_.pozycja_ID_POZYCJI as pozycja_6_3_1_, pozycja1_.ID_POZYCJI as ID_POZYC1_4_2_, pozycja1_.mecz_ID_MECZU as mecz_ID_3_4_2_, pozycja1_.NAZWA as NAZWA2_4_2_, pozycja1_.ID_ZAWODNIKA as ID_ZAWOD4_4_2_, mecz2_.ID_MECZU as ID_MECZU1_2_3_, mecz2_.stadion_ID_STADIONU as stadion_3_2_3_, mecz2_.TERMIN as TERMIN2_2_3_, zawodnik3_.ID_OSOBY as ID_OSOBY2_3_4_, zawodnik3_.IMIE as IMIE3_3_4_, zawodnik3_.NAZWISKO as NAZWISKO4_3_4_, zawodnik3_.druzyna_ID_DRUZYNY as druzyna_5_3_4_, zawodnik3_.pozycja_ID_POZYCJI as pozycja_6_3_4_ from OSOBY zawodnicy0_ left outer join POZYCJE pozycja1_ on zawodnicy0_.pozycja_ID_POZYCJI=pozycja1_.ID_POZYCJI left outer join MECZ mecz2_ on pozycja1_.mecz_ID_MECZU=mecz2_.ID_MECZU left outer join OSOBY zawodnik3_ on pozycja1_.ID_ZAWODNIKA=zawodnik3_.ID_OSOBY where zawodnicy0_.druzyna_ID_DRUZYNY=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@89c10b7]
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dbe30be]
Visiting attribute path : druzyny
Property path deemed to be circular : druzyny
Visiting attribute path : pozycje
Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d08f3f5]
Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@119f1f2a]
Visiting attribute path : stadion
Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a1da881]
Visiting attribute path : stadion.lokalizacja
Visiting attribute path : stadion.nazwa
Visiting attribute path : statystyki
Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7fd4acee]
Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165b8a71]
Visiting attribute path : termin
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(collection=data.Druzyna.mecz)
    - Returns
       - CollectionReturnImpl(collection=data.Druzyna.mecz, querySpaceUid=<gen:0>, path=[data.Druzyna.mecz])
          - (collection element) CollectionFetchableElementEntityGraph(entity=data.Mecz, querySpaceUid=<gen:1>, path=[data.Druzyna.mecz].<elements>)
             - CollectionAttributeFetchImpl(collection=data.Mecz.pozycje, querySpaceUid=<gen:2>, path=[data.Druzyna.mecz].<elements>.pozycje)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Pozycja, querySpaceUid=<gen:3>, path=[data.Druzyna.mecz].<elements>.pozycje.<elements>)
             - EntityAttributeFetchImpl(entity=data.Stadion, querySpaceUid=<gen:4>, path=[data.Druzyna.mecz].<elements>.stadion)
             - CollectionAttributeFetchImpl(collection=data.Mecz.statystyki, querySpaceUid=<gen:5>, path=[data.Druzyna.mecz].<elements>.statystyki)
                - (collection element) CollectionFetchableElementEntityGraph(entity=data.Statystyki, querySpaceUid=<gen:6>, path=[data.Druzyna.mecz].<elements>.statystyki.<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=data.Druzyna.mecz)
          - SQL table alias mapping - mecz0_
          - alias suffix - 0_
          - suffixed key columns - {druzyny_1_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID_MECZU1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=data.Mecz)
                - SQL table alias mapping - mecz1_
                - alias suffix - 1_
                - suffixed key columns - {ID_MECZU1_2_1_}
                - JOIN (JoinDefinedByMetadata(stadion)) : <gen:1> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=data.Stadion)
                      - SQL table alias mapping - stadion2_
                      - alias suffix - 2_
                      - suffixed key columns - {ID_STADI1_7_2_}

Static select for collection data.Druzyna.mecz: select mecz0_.druzyny_ID_DRUZYNY as druzyny_1_1_0_, mecz0_.mecz_ID_MECZU as mecz_ID_2_1_0_, mecz1_.ID_MECZU as ID_MECZU1_2_1_, mecz1_.stadion_ID_STADIONU as stadion_3_2_1_, mecz1_.TERMIN as TERMIN2_2_1_, stadion2_.ID_STADIONU as ID_STADI1_7_2_, stadion2_.LOKALIZACJA as LOKALIZA2_7_2_, stadion2_.NAZWA as NAZWA3_7_2_ from DRUZYNY_MECZ mecz0_ inner join MECZ mecz1_ on mecz0_.mecz_ID_MECZU=mecz1_.ID_MECZU left outer join STADIONY stadion2_ on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU where mecz0_.druzyny_ID_DRUZYNY=?
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5dcbb60] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
No alter strings for table : DRUZYNY
No alter strings for table : DRUZYNY_MECZ
No alter strings for table : hibernate_sequence
No alter strings for table : MECZ
No alter strings for table : OSOBY
No alter strings for table : POZYCJE
No alter strings for table : POZYCJE_MECZ
No alter strings for table : RODZAJSTATYSTYKI
No alter strings for table : STADIONY
No alter strings for table : STATYSTYKI
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7e1a1da6
Registering SessionFactory: c2808496-b2c6-4d05-951e-649d27108431 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
begin
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@2a2bb0eb
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: from data.Mecz
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'data'
                \-[IDENT] Node: 'Mecz'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Mecz (<no alias>) -> mecz0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} MECZ mecz0_ ) )
Derived SELECT clause created.
Using FROM fragment [MECZ mecz0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (MECZ)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'mecz0_.ID_MECZU as ID_MECZU1_2_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=MECZ,tableAlias=mecz0_,origin=null,columns={,className=data.Mecz}}}
    |  \-[SQL_TOKEN] SqlFragment: 'mecz0_.stadion_ID_STADIONU as stadion_3_2_, mecz0_.TERMIN as TERMIN2_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[mecz0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'MECZ mecz0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=MECZ,tableAlias=mecz0_,origin=null,columns={,className=data.Mecz}}

throwQueryException() : no errors
HQL: from data.Mecz
SQL: select mecz0_.ID_MECZU as ID_MECZU1_2_, mecz0_.stadion_ID_STADIONU as stadion_3_2_, mecz0_.TERMIN as TERMIN2_2_ from MECZ mecz0_
throwQueryException() : no errors

    select
        mecz0_.ID_MECZU as ID_MECZU1_2_,
        mecz0_.stadion_ID_STADIONU as stadion_3_2_,
        mecz0_.TERMIN as TERMIN2_2_ 
    from
        MECZ mecz0_
Result set row: 0
Result row: EntityKey[data.Mecz#7]
Result set row: 1
Result row: EntityKey[data.Mecz#8]
Result set row: 2
Result row: EntityKey[data.Mecz#9]
Result set row: 3
Result row: EntityKey[data.Mecz#10]
Resolving associations for [data.Mecz#7]

    select
        stadion0_.ID_STADIONU as ID_STADI1_7_0_,
        stadion0_.LOKALIZACJA as LOKALIZA2_7_0_,
        stadion0_.NAZWA as NAZWA3_7_0_ 
    from
        STADIONY stadion0_ 
    where
        stadion0_.ID_STADIONU=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Stadion#22]
Done materializing entity [data.Stadion#22]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Stadion#22
Done materializing entity [data.Mecz#7]
Resolving associations for [data.Mecz#8]

    select
        stadion0_.ID_STADIONU as ID_STADI1_7_0_,
        stadion0_.LOKALIZACJA as LOKALIZA2_7_0_,
        stadion0_.NAZWA as NAZWA3_7_0_ 
    from
        STADIONY stadion0_ 
    where
        stadion0_.ID_STADIONU=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Stadion#23]
Done materializing entity [data.Stadion#23]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Stadion#23
Done materializing entity [data.Mecz#8]
Resolving associations for [data.Mecz#9]

    select
        stadion0_.ID_STADIONU as ID_STADI1_7_0_,
        stadion0_.LOKALIZACJA as LOKALIZA2_7_0_,
        stadion0_.NAZWA as NAZWA3_7_0_ 
    from
        STADIONY stadion0_ 
    where
        stadion0_.ID_STADIONU=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Stadion#24]
Done materializing entity [data.Stadion#24]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Stadion#24
Done materializing entity [data.Mecz#9]
Resolving associations for [data.Mecz#10]
Done materializing entity [data.Mecz#10]
parse() - HQL: from data.Druzyna
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'data'
                \-[IDENT] Node: 'Druzyna'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Druzyna (<no alias>) -> druzyna0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} DRUZYNY druzyna0_ ) )
Derived SELECT clause created.
Using FROM fragment [DRUZYNY druzyna0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DRUZYNY)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=DRUZYNY,tableAlias=druzyna0_,origin=null,columns={,className=data.Druzyna}}}
    |  \-[SQL_TOKEN] SqlFragment: 'druzyna0_.KRAJ as KRAJ2_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[druzyna0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'DRUZYNY druzyna0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=DRUZYNY,tableAlias=druzyna0_,origin=null,columns={,className=data.Druzyna}}

throwQueryException() : no errors
HQL: from data.Druzyna
SQL: select druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_, druzyna0_.KRAJ as KRAJ2_0_, druzyna0_.trener_ID_OSOBY as trener_I3_0_ from DRUZYNY druzyna0_
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [data.Mecz.druzyny#7], was: [data.Mecz.druzyny#7] (uninitialized)
Collection found: [data.Mecz.pozycje#7], was: [data.Mecz.pozycje#7] (uninitialized)
Collection found: [data.Mecz.statystyki#7], was: [data.Mecz.statystyki#7] (uninitialized)
Collection found: [data.Mecz.druzyny#8], was: [data.Mecz.druzyny#8] (uninitialized)
Collection found: [data.Mecz.pozycje#8], was: [data.Mecz.pozycje#8] (uninitialized)
Collection found: [data.Mecz.statystyki#8], was: [data.Mecz.statystyki#8] (uninitialized)
Collection found: [data.Mecz.druzyny#9], was: [data.Mecz.druzyny#9] (uninitialized)
Collection found: [data.Mecz.pozycje#9], was: [data.Mecz.pozycje#9] (uninitialized)
Collection found: [data.Mecz.statystyki#9], was: [data.Mecz.statystyki#9] (uninitialized)
Collection found: [data.Mecz.druzyny#10], was: [data.Mecz.druzyny#10] (uninitialized)
Collection found: [data.Mecz.pozycje#10], was: [data.Mecz.pozycje#10] (uninitialized)
Collection found: [data.Mecz.statystyki#10], was: [data.Mecz.statystyki#10] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 7 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 12 collections
Listing entities:
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#24, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=232239600000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1977,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=9, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#23, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=165106800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1975,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=86,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=8, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=null, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=1514761200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2018,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=10, statystyki=<uninitialized>}
data.Stadion{id=22, nazwa=STADION NARODOWY, lokalizacja=WARSZAWA}
data.Stadion{id=23, nazwa=STADION, lokalizacja=WROCLAW}
data.Stadion{id=24, nazwa=ORLIK, lokalizacja=MILOWKA}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#22, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=97369200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1973,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=7, statystyki=<uninitialized>}

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_,
        druzyna0_.KRAJ as KRAJ2_0_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_ 
    from
        DRUZYNY druzyna0_
Result set row: 0
Result row: EntityKey[data.Druzyna#3]
Result set row: 1
Result row: EntityKey[data.Druzyna#4]
Result set row: 2
Result row: EntityKey[data.Druzyna#5]
Result set row: 3
Result row: EntityKey[data.Druzyna#6]
Resolving associations for [data.Druzyna#3]

    select
        trener0_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener0_.IMIE as IMIE3_3_0_,
        trener0_.NAZWISKO as NAZWISKO4_3_0_,
        druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna1_.KRAJ as KRAJ2_0_1_,
        druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ 
    from
        OSOBY trener0_ 
    left outer join
        DRUZYNY druzyna1_ 
            on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY 
    where
        trener0_.ID_OSOBY=? 
        and trener0_.DTYPE='Trener'
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Trener#29]
Loading entity: [data.Druzyna#29]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#29], EntityKey[data.Druzyna#3]
Done entity load
Done materializing entity [data.Trener#29]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Trener#29
Done materializing entity [data.Druzyna#3]
Resolving associations for [data.Druzyna#4]

    select
        trener0_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener0_.IMIE as IMIE3_3_0_,
        trener0_.NAZWISKO as NAZWISKO4_3_0_,
        druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna1_.KRAJ as KRAJ2_0_1_,
        druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ 
    from
        OSOBY trener0_ 
    left outer join
        DRUZYNY druzyna1_ 
            on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY 
    where
        trener0_.ID_OSOBY=? 
        and trener0_.DTYPE='Trener'
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Trener#30]
Loading entity: [data.Druzyna#30]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#30], EntityKey[data.Druzyna#4]
Done entity load
Done materializing entity [data.Trener#30]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Trener#30
Done materializing entity [data.Druzyna#4]
Resolving associations for [data.Druzyna#5]

    select
        trener0_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener0_.IMIE as IMIE3_3_0_,
        trener0_.NAZWISKO as NAZWISKO4_3_0_,
        druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna1_.KRAJ as KRAJ2_0_1_,
        druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ 
    from
        OSOBY trener0_ 
    left outer join
        DRUZYNY druzyna1_ 
            on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY 
    where
        trener0_.ID_OSOBY=? 
        and trener0_.DTYPE='Trener'
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Trener#31]
Loading entity: [data.Druzyna#31]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#31], EntityKey[data.Druzyna#5]
Done entity load
Done materializing entity [data.Trener#31]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Trener#31
Done materializing entity [data.Druzyna#5]
Resolving associations for [data.Druzyna#6]
Done materializing entity [data.Druzyna#6]
parse() - HQL: from data.Statystyki
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'data'
                \-[IDENT] Node: 'Statystyki'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Statystyki (<no alias>) -> statystyki0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} STATYSTYKI statystyki0_ ) )
Derived SELECT clause created.
Using FROM fragment [STATYSTYKI statystyki0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATYSTYKI)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'statystyki0_.ID_STATYSTYKI as ID_STATY1_8_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=STATYSTYKI,tableAlias=statystyki0_,origin=null,columns={,className=data.Statystyki}}}
    |  \-[SQL_TOKEN] SqlFragment: 'statystyki0_.ID_MECZU as ID_MECZU3_8_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_, statystyki0_.WARTOSC as WARTOSC2_8_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[statystyki0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STATYSTYKI statystyki0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=STATYSTYKI,tableAlias=statystyki0_,origin=null,columns={,className=data.Statystyki}}

throwQueryException() : no errors
HQL: from data.Statystyki
SQL: select statystyki0_.ID_STATYSTYKI as ID_STATY1_8_, statystyki0_.ID_MECZU as ID_MECZU3_8_, statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_, statystyki0_.WARTOSC as WARTOSC2_8_ from STATYSTYKI statystyki0_
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [data.Mecz.druzyny#7], was: [data.Mecz.druzyny#7] (uninitialized)
Collection found: [data.Mecz.pozycje#7], was: [data.Mecz.pozycje#7] (uninitialized)
Collection found: [data.Mecz.statystyki#7], was: [data.Mecz.statystyki#7] (uninitialized)
Collection found: [data.Mecz.druzyny#8], was: [data.Mecz.druzyny#8] (uninitialized)
Collection found: [data.Mecz.pozycje#8], was: [data.Mecz.pozycje#8] (uninitialized)
Collection found: [data.Mecz.statystyki#8], was: [data.Mecz.statystyki#8] (uninitialized)
Collection found: [data.Mecz.druzyny#9], was: [data.Mecz.druzyny#9] (uninitialized)
Collection found: [data.Mecz.pozycje#9], was: [data.Mecz.pozycje#9] (uninitialized)
Collection found: [data.Mecz.statystyki#9], was: [data.Mecz.statystyki#9] (uninitialized)
Collection found: [data.Mecz.druzyny#10], was: [data.Mecz.druzyny#10] (uninitialized)
Collection found: [data.Mecz.pozycje#10], was: [data.Mecz.pozycje#10] (uninitialized)
Collection found: [data.Mecz.statystyki#10], was: [data.Mecz.statystyki#10] (uninitialized)
Collection found: [data.Druzyna.mecz#3], was: [data.Druzyna.mecz#3] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#3], was: [data.Druzyna.zawodnicy#3] (uninitialized)
Collection found: [data.Druzyna.mecz#4], was: [data.Druzyna.mecz#4] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#4], was: [data.Druzyna.zawodnicy#4] (uninitialized)
Collection found: [data.Druzyna.mecz#5], was: [data.Druzyna.mecz#5] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#5], was: [data.Druzyna.zawodnicy#5] (uninitialized)
Collection found: [data.Druzyna.mecz#6], was: [data.Druzyna.mecz#6] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#6], was: [data.Druzyna.zawodnicy#6] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 14 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 20 collections
Listing entities:
data.Druzyna{kraj=San Escobar, zawodnicy=<uninitialized>, id=6, mecz=<uninitialized>, trener=null}
data.Stadion{id=23, nazwa=STADION, lokalizacja=WROCLAW}
data.Stadion{id=24, nazwa=ORLIK, lokalizacja=MILOWKA}
data.Druzyna{kraj=Polska, zawodnicy=<uninitialized>, id=3, mecz=<uninitialized>, trener=data.Trener#29}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#22, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=97369200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1973,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=7, statystyki=<uninitialized>}
data.Druzyna{kraj=Czechy, zawodnicy=<uninitialized>, id=4, mecz=<uninitialized>, trener=data.Trener#30}
data.Druzyna{kraj=Ekwador, zawodnicy=<uninitialized>, id=5, mecz=<uninitialized>, trener=data.Trener#31}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#24, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=232239600000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1977,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=9, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#23, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=165106800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1975,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=86,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=8, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=null, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=1514761200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2018,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=10, statystyki=<uninitialized>}
data.Stadion{id=22, nazwa=STADION NARODOWY, lokalizacja=WARSZAWA}
data.Trener{imie=Apoloniusz, nazwisko=Tajner, druzyna=data.Druzyna#5, id=31}
data.Trener{imie=Piotr, nazwisko=Maszewski, druzyna=data.Druzyna#4, id=30}
data.Trener{imie=Karol, nazwisko=Poglodzinski, druzyna=data.Druzyna#3, id=29}

    select
        statystyki0_.ID_STATYSTYKI as ID_STATY1_8_,
        statystyki0_.ID_MECZU as ID_MECZU3_8_,
        statystyki0_.ID_RODZAJUSTATYSTYKI as ID_RODZA4_8_,
        statystyki0_.WARTOSC as WARTOSC2_8_ 
    from
        STATYSTYKI statystyki0_
Result set row: 0
Result row: EntityKey[data.Statystyki#25]
Result set row: 1
Result row: EntityKey[data.Statystyki#26]
Result set row: 2
Result row: EntityKey[data.Statystyki#27]
Result set row: 3
Result row: EntityKey[data.Statystyki#28]
Resolving associations for [data.Statystyki#25]

    select
        rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_,
        rodzajstat0_.OPIS as OPIS2_6_0_ 
    from
        RODZAJSTATYSTYKI rodzajstat0_ 
    where
        rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.RodzajStatystyki#16]
Done materializing entity [data.RodzajStatystyki#16]
HHH000387: ResultSet's statement was not registered
Done entity load : data.RodzajStatystyki#16
Done materializing entity [data.Statystyki#25]
Resolving associations for [data.Statystyki#26]

    select
        rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_,
        rodzajstat0_.OPIS as OPIS2_6_0_ 
    from
        RODZAJSTATYSTYKI rodzajstat0_ 
    where
        rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.RodzajStatystyki#17]
Done materializing entity [data.RodzajStatystyki#17]
HHH000387: ResultSet's statement was not registered
Done entity load : data.RodzajStatystyki#17
Done materializing entity [data.Statystyki#26]
Resolving associations for [data.Statystyki#27]

    select
        rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_,
        rodzajstat0_.OPIS as OPIS2_6_0_ 
    from
        RODZAJSTATYSTYKI rodzajstat0_ 
    where
        rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.RodzajStatystyki#18]
Done materializing entity [data.RodzajStatystyki#18]
HHH000387: ResultSet's statement was not registered
Done entity load : data.RodzajStatystyki#18
Done materializing entity [data.Statystyki#27]
Resolving associations for [data.Statystyki#28]

    select
        rodzajstat0_.ID_RODZAJUSTATYSTYKI as ID_RODZA1_6_0_,
        rodzajstat0_.OPIS as OPIS2_6_0_ 
    from
        RODZAJSTATYSTYKI rodzajstat0_ 
    where
        rodzajstat0_.ID_RODZAJUSTATYSTYKI=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.RodzajStatystyki#20]
Done materializing entity [data.RodzajStatystyki#20]
HHH000387: ResultSet's statement was not registered
Done entity load : data.RodzajStatystyki#20
Done materializing entity [data.Statystyki#28]
parse() - HQL: from data.Trener
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'data'
                \-[IDENT] Node: 'Trener'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Trener (<no alias>) -> trener0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} OSOBY trener0_ ) )
Derived SELECT clause created.
Using FROM fragment [OSOBY trener0_]
Using unprocessed WHERE-fragment [trener0_.DTYPE='Trener']
Using processed WHERE-fragment [trener0_.DTYPE='Trener']
getWhereClause() : Creating a new WHERE clause...
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (OSOBY)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'trener0_.ID_OSOBY as ID_OSOBY2_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OSOBY,tableAlias=trener0_,origin=null,columns={,className=data.Trener}}}
    |  \-[SQL_TOKEN] SqlFragment: 'trener0_.IMIE as IMIE3_3_, trener0_.NAZWISKO as NAZWISKO4_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[trener0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'OSOBY trener0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OSOBY,tableAlias=trener0_,origin=null,columns={,className=data.Trener}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'trener0_.DTYPE='Trener''

throwQueryException() : no errors
HQL: from data.Trener
SQL: select trener0_.ID_OSOBY as ID_OSOBY2_3_, trener0_.IMIE as IMIE3_3_, trener0_.NAZWISKO as NAZWISKO4_3_ from OSOBY trener0_ where trener0_.DTYPE='Trener'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [data.Mecz.druzyny#7], was: [data.Mecz.druzyny#7] (uninitialized)
Collection found: [data.Mecz.pozycje#7], was: [data.Mecz.pozycje#7] (uninitialized)
Collection found: [data.Mecz.statystyki#7], was: [data.Mecz.statystyki#7] (uninitialized)
Collection found: [data.Mecz.druzyny#8], was: [data.Mecz.druzyny#8] (uninitialized)
Collection found: [data.Mecz.pozycje#8], was: [data.Mecz.pozycje#8] (uninitialized)
Collection found: [data.Mecz.statystyki#8], was: [data.Mecz.statystyki#8] (uninitialized)
Collection found: [data.Mecz.druzyny#9], was: [data.Mecz.druzyny#9] (uninitialized)
Collection found: [data.Mecz.pozycje#9], was: [data.Mecz.pozycje#9] (uninitialized)
Collection found: [data.Mecz.statystyki#9], was: [data.Mecz.statystyki#9] (uninitialized)
Collection found: [data.Mecz.druzyny#10], was: [data.Mecz.druzyny#10] (uninitialized)
Collection found: [data.Mecz.pozycje#10], was: [data.Mecz.pozycje#10] (uninitialized)
Collection found: [data.Mecz.statystyki#10], was: [data.Mecz.statystyki#10] (uninitialized)
Collection found: [data.Druzyna.mecz#3], was: [data.Druzyna.mecz#3] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#3], was: [data.Druzyna.zawodnicy#3] (uninitialized)
Collection found: [data.Druzyna.mecz#4], was: [data.Druzyna.mecz#4] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#4], was: [data.Druzyna.zawodnicy#4] (uninitialized)
Collection found: [data.Druzyna.mecz#5], was: [data.Druzyna.mecz#5] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#5], was: [data.Druzyna.zawodnicy#5] (uninitialized)
Collection found: [data.Druzyna.mecz#6], was: [data.Druzyna.mecz#6] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#6], was: [data.Druzyna.zawodnicy#6] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 20 collections
Listing entities:
data.Druzyna{kraj=San Escobar, zawodnicy=<uninitialized>, id=6, mecz=<uninitialized>, trener=null}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#16, id=25, wartosc=66, mecz=data.Mecz#7}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#17, id=26, wartosc=211, mecz=data.Mecz#7}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#18, id=27, wartosc=250, mecz=null}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#20, id=28, wartosc=270, mecz=null}
data.Stadion{id=23, nazwa=STADION, lokalizacja=WROCLAW}
data.RodzajStatystyki{id=17, opis=SPALONE}
data.Stadion{id=24, nazwa=ORLIK, lokalizacja=MILOWKA}
data.RodzajStatystyki{id=16, opis=AUTY}
data.Druzyna{kraj=Polska, zawodnicy=<uninitialized>, id=3, mecz=<uninitialized>, trener=data.Trener#29}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#22, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=97369200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1973,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=7, statystyki=<uninitialized>}
data.Druzyna{kraj=Czechy, zawodnicy=<uninitialized>, id=4, mecz=<uninitialized>, trener=data.Trener#30}
data.Druzyna{kraj=Ekwador, zawodnicy=<uninitialized>, id=5, mecz=<uninitialized>, trener=data.Trener#31}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#24, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=232239600000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1977,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=9, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#23, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=165106800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1975,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=86,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=8, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=null, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=1514761200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2018,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=10, statystyki=<uninitialized>}
data.Stadion{id=22, nazwa=STADION NARODOWY, lokalizacja=WARSZAWA}
data.RodzajStatystyki{id=18, opis=PUNKTOW}
data.RodzajStatystyki{id=20, opis=BRAMEK}
data.Trener{imie=Apoloniusz, nazwisko=Tajner, druzyna=data.Druzyna#5, id=31}
data.Trener{imie=Piotr, nazwisko=Maszewski, druzyna=data.Druzyna#4, id=30}
More......

    select
        trener0_.ID_OSOBY as ID_OSOBY2_3_,
        trener0_.IMIE as IMIE3_3_,
        trener0_.NAZWISKO as NAZWISKO4_3_ 
    from
        OSOBY trener0_ 
    where
        trener0_.DTYPE='Trener'
Result set row: 0
Result row: EntityKey[data.Trener#29]
Result set row: 1
Result row: EntityKey[data.Trener#30]
Result set row: 2
Result row: EntityKey[data.Trener#31]
parse() - HQL: from data.Zawodnik
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'data'
                \-[IDENT] Node: 'Zawodnik'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Zawodnik (<no alias>) -> zawodnik0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} OSOBY zawodnik0_ ) )
Derived SELECT clause created.
Using FROM fragment [OSOBY zawodnik0_]
Using unprocessed WHERE-fragment [zawodnik0_.DTYPE='Zawodnik']
Using processed WHERE-fragment [zawodnik0_.DTYPE='Zawodnik']
getWhereClause() : Creating a new WHERE clause...
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (OSOBY)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'zawodnik0_.ID_OSOBY as ID_OSOBY2_3_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OSOBY,tableAlias=zawodnik0_,origin=null,columns={,className=data.Zawodnik}}}
    |  \-[SQL_TOKEN] SqlFragment: 'zawodnik0_.IMIE as IMIE3_3_, zawodnik0_.NAZWISKO as NAZWISKO4_3_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[zawodnik0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'OSOBY zawodnik0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OSOBY,tableAlias=zawodnik0_,origin=null,columns={,className=data.Zawodnik}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[FILTERS] SqlNode: '{filter conditions}'
          \-[SQL_TOKEN] SqlFragment: 'zawodnik0_.DTYPE='Zawodnik''

throwQueryException() : no errors
HQL: from data.Zawodnik
SQL: select zawodnik0_.ID_OSOBY as ID_OSOBY2_3_, zawodnik0_.IMIE as IMIE3_3_, zawodnik0_.NAZWISKO as NAZWISKO4_3_, zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_, zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_ from OSOBY zawodnik0_ where zawodnik0_.DTYPE='Zawodnik'
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [data.Mecz.druzyny#7], was: [data.Mecz.druzyny#7] (uninitialized)
Collection found: [data.Mecz.pozycje#7], was: [data.Mecz.pozycje#7] (uninitialized)
Collection found: [data.Mecz.statystyki#7], was: [data.Mecz.statystyki#7] (uninitialized)
Collection found: [data.Mecz.druzyny#8], was: [data.Mecz.druzyny#8] (uninitialized)
Collection found: [data.Mecz.pozycje#8], was: [data.Mecz.pozycje#8] (uninitialized)
Collection found: [data.Mecz.statystyki#8], was: [data.Mecz.statystyki#8] (uninitialized)
Collection found: [data.Mecz.druzyny#9], was: [data.Mecz.druzyny#9] (uninitialized)
Collection found: [data.Mecz.pozycje#9], was: [data.Mecz.pozycje#9] (uninitialized)
Collection found: [data.Mecz.statystyki#9], was: [data.Mecz.statystyki#9] (uninitialized)
Collection found: [data.Mecz.druzyny#10], was: [data.Mecz.druzyny#10] (uninitialized)
Collection found: [data.Mecz.pozycje#10], was: [data.Mecz.pozycje#10] (uninitialized)
Collection found: [data.Mecz.statystyki#10], was: [data.Mecz.statystyki#10] (uninitialized)
Collection found: [data.Druzyna.mecz#3], was: [data.Druzyna.mecz#3] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#3], was: [data.Druzyna.zawodnicy#3] (uninitialized)
Collection found: [data.Druzyna.mecz#4], was: [data.Druzyna.mecz#4] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#4], was: [data.Druzyna.zawodnicy#4] (uninitialized)
Collection found: [data.Druzyna.mecz#5], was: [data.Druzyna.mecz#5] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#5], was: [data.Druzyna.zawodnicy#5] (uninitialized)
Collection found: [data.Druzyna.mecz#6], was: [data.Druzyna.mecz#6] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#6], was: [data.Druzyna.zawodnicy#6] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 22 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 20 collections
Listing entities:
data.Druzyna{kraj=San Escobar, zawodnicy=<uninitialized>, id=6, mecz=<uninitialized>, trener=null}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#16, id=25, wartosc=66, mecz=data.Mecz#7}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#17, id=26, wartosc=211, mecz=data.Mecz#7}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#18, id=27, wartosc=250, mecz=null}
data.Statystyki{rodzajStatystyki=data.RodzajStatystyki#20, id=28, wartosc=270, mecz=null}
data.Stadion{id=23, nazwa=STADION, lokalizacja=WROCLAW}
data.RodzajStatystyki{id=17, opis=SPALONE}
data.Stadion{id=24, nazwa=ORLIK, lokalizacja=MILOWKA}
data.RodzajStatystyki{id=16, opis=AUTY}
data.Druzyna{kraj=Polska, zawodnicy=<uninitialized>, id=3, mecz=<uninitialized>, trener=data.Trener#29}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#22, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=97369200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1973,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=7, statystyki=<uninitialized>}
data.Druzyna{kraj=Czechy, zawodnicy=<uninitialized>, id=4, mecz=<uninitialized>, trener=data.Trener#30}
data.Druzyna{kraj=Ekwador, zawodnicy=<uninitialized>, id=5, mecz=<uninitialized>, trener=data.Trener#31}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#24, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=232239600000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1977,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=9, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#23, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=165106800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1975,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=86,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=8, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=null, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=1514761200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2018,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=10, statystyki=<uninitialized>}
data.Stadion{id=22, nazwa=STADION NARODOWY, lokalizacja=WARSZAWA}
data.RodzajStatystyki{id=18, opis=PUNKTOW}
data.RodzajStatystyki{id=20, opis=BRAMEK}
data.Trener{imie=Apoloniusz, nazwisko=Tajner, druzyna=data.Druzyna#5, id=31}
data.Trener{imie=Piotr, nazwisko=Maszewski, druzyna=data.Druzyna#4, id=30}
More......

    select
        zawodnik0_.ID_OSOBY as ID_OSOBY2_3_,
        zawodnik0_.IMIE as IMIE3_3_,
        zawodnik0_.NAZWISKO as NAZWISKO4_3_,
        zawodnik0_.druzyna_ID_DRUZYNY as druzyna_5_3_,
        zawodnik0_.pozycja_ID_POZYCJI as pozycja_6_3_ 
    from
        OSOBY zawodnik0_ 
    where
        zawodnik0_.DTYPE='Zawodnik'
Result set row: 0
Result row: EntityKey[data.Zawodnik#32]
Result set row: 1
Result row: EntityKey[data.Zawodnik#33]
Result set row: 2
Result row: EntityKey[data.Zawodnik#34]
Resolving associations for [data.Zawodnik#32]

    select
        pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_,
        pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_,
        pozycja0_.NAZWA as NAZWA2_4_0_,
        pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_,
        mecz1_.ID_MECZU as ID_MECZU1_2_1_,
        mecz1_.stadion_ID_STADIONU as stadion_3_2_1_,
        mecz1_.TERMIN as TERMIN2_2_1_,
        stadion2_.ID_STADIONU as ID_STADI1_7_2_,
        stadion2_.LOKALIZACJA as LOKALIZA2_7_2_,
        stadion2_.NAZWA as NAZWA3_7_2_,
        zawodnik3_.ID_OSOBY as ID_OSOBY2_3_3_,
        zawodnik3_.IMIE as IMIE3_3_3_,
        zawodnik3_.NAZWISKO as NAZWISKO4_3_3_,
        zawodnik3_.druzyna_ID_DRUZYNY as druzyna_5_3_3_,
        zawodnik3_.pozycja_ID_POZYCJI as pozycja_6_3_3_,
        druzyna4_.ID_DRUZYNY as ID_DRUZY1_0_4_,
        druzyna4_.KRAJ as KRAJ2_0_4_,
        druzyna4_.trener_ID_OSOBY as trener_I3_0_4_,
        pozycja5_.ID_POZYCJI as ID_POZYC1_4_5_,
        pozycja5_.mecz_ID_MECZU as mecz_ID_3_4_5_,
        pozycja5_.NAZWA as NAZWA2_4_5_,
        pozycja5_.ID_ZAWODNIKA as ID_ZAWOD4_4_5_ 
    from
        POZYCJE pozycja0_ 
    left outer join
        MECZ mecz1_ 
            on pozycja0_.mecz_ID_MECZU=mecz1_.ID_MECZU 
    left outer join
        STADIONY stadion2_ 
            on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU 
    left outer join
        OSOBY zawodnik3_ 
            on pozycja0_.ID_ZAWODNIKA=zawodnik3_.ID_OSOBY 
    left outer join
        DRUZYNY druzyna4_ 
            on zawodnik3_.druzyna_ID_DRUZYNY=druzyna4_.ID_DRUZYNY 
    left outer join
        POZYCJE pozycja5_ 
            on zawodnik3_.pozycja_ID_POZYCJI=pozycja5_.ID_POZYCJI 
    where
        pozycja0_.ID_POZYCJI=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Pozycja#11]
Done materializing entity [data.Pozycja#11]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Pozycja#11
Done materializing entity [data.Zawodnik#32]
Resolving associations for [data.Zawodnik#33]

    select
        pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_,
        pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_,
        pozycja0_.NAZWA as NAZWA2_4_0_,
        pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_,
        mecz1_.ID_MECZU as ID_MECZU1_2_1_,
        mecz1_.stadion_ID_STADIONU as stadion_3_2_1_,
        mecz1_.TERMIN as TERMIN2_2_1_,
        stadion2_.ID_STADIONU as ID_STADI1_7_2_,
        stadion2_.LOKALIZACJA as LOKALIZA2_7_2_,
        stadion2_.NAZWA as NAZWA3_7_2_,
        zawodnik3_.ID_OSOBY as ID_OSOBY2_3_3_,
        zawodnik3_.IMIE as IMIE3_3_3_,
        zawodnik3_.NAZWISKO as NAZWISKO4_3_3_,
        zawodnik3_.druzyna_ID_DRUZYNY as druzyna_5_3_3_,
        zawodnik3_.pozycja_ID_POZYCJI as pozycja_6_3_3_,
        druzyna4_.ID_DRUZYNY as ID_DRUZY1_0_4_,
        druzyna4_.KRAJ as KRAJ2_0_4_,
        druzyna4_.trener_ID_OSOBY as trener_I3_0_4_,
        pozycja5_.ID_POZYCJI as ID_POZYC1_4_5_,
        pozycja5_.mecz_ID_MECZU as mecz_ID_3_4_5_,
        pozycja5_.NAZWA as NAZWA2_4_5_,
        pozycja5_.ID_ZAWODNIKA as ID_ZAWOD4_4_5_ 
    from
        POZYCJE pozycja0_ 
    left outer join
        MECZ mecz1_ 
            on pozycja0_.mecz_ID_MECZU=mecz1_.ID_MECZU 
    left outer join
        STADIONY stadion2_ 
            on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU 
    left outer join
        OSOBY zawodnik3_ 
            on pozycja0_.ID_ZAWODNIKA=zawodnik3_.ID_OSOBY 
    left outer join
        DRUZYNY druzyna4_ 
            on zawodnik3_.druzyna_ID_DRUZYNY=druzyna4_.ID_DRUZYNY 
    left outer join
        POZYCJE pozycja5_ 
            on zawodnik3_.pozycja_ID_POZYCJI=pozycja5_.ID_POZYCJI 
    where
        pozycja0_.ID_POZYCJI=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Pozycja#12]
Done materializing entity [data.Pozycja#12]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Pozycja#12
Done materializing entity [data.Zawodnik#33]
Resolving associations for [data.Zawodnik#34]

    select
        pozycja0_.ID_POZYCJI as ID_POZYC1_4_0_,
        pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_0_,
        pozycja0_.NAZWA as NAZWA2_4_0_,
        pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_0_,
        mecz1_.ID_MECZU as ID_MECZU1_2_1_,
        mecz1_.stadion_ID_STADIONU as stadion_3_2_1_,
        mecz1_.TERMIN as TERMIN2_2_1_,
        stadion2_.ID_STADIONU as ID_STADI1_7_2_,
        stadion2_.LOKALIZACJA as LOKALIZA2_7_2_,
        stadion2_.NAZWA as NAZWA3_7_2_,
        zawodnik3_.ID_OSOBY as ID_OSOBY2_3_3_,
        zawodnik3_.IMIE as IMIE3_3_3_,
        zawodnik3_.NAZWISKO as NAZWISKO4_3_3_,
        zawodnik3_.druzyna_ID_DRUZYNY as druzyna_5_3_3_,
        zawodnik3_.pozycja_ID_POZYCJI as pozycja_6_3_3_,
        druzyna4_.ID_DRUZYNY as ID_DRUZY1_0_4_,
        druzyna4_.KRAJ as KRAJ2_0_4_,
        druzyna4_.trener_ID_OSOBY as trener_I3_0_4_,
        pozycja5_.ID_POZYCJI as ID_POZYC1_4_5_,
        pozycja5_.mecz_ID_MECZU as mecz_ID_3_4_5_,
        pozycja5_.NAZWA as NAZWA2_4_5_,
        pozycja5_.ID_ZAWODNIKA as ID_ZAWOD4_4_5_ 
    from
        POZYCJE pozycja0_ 
    left outer join
        MECZ mecz1_ 
            on pozycja0_.mecz_ID_MECZU=mecz1_.ID_MECZU 
    left outer join
        STADIONY stadion2_ 
            on mecz1_.stadion_ID_STADIONU=stadion2_.ID_STADIONU 
    left outer join
        OSOBY zawodnik3_ 
            on pozycja0_.ID_ZAWODNIKA=zawodnik3_.ID_OSOBY 
    left outer join
        DRUZYNY druzyna4_ 
            on zawodnik3_.druzyna_ID_DRUZYNY=druzyna4_.ID_DRUZYNY 
    left outer join
        POZYCJE pozycja5_ 
            on zawodnik3_.pozycja_ID_POZYCJI=pozycja5_.ID_POZYCJI 
    where
        pozycja0_.ID_POZYCJI=?
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Pozycja#13]
Done materializing entity [data.Pozycja#13]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Pozycja#13
Done materializing entity [data.Zawodnik#34]
parse() - HQL: from data.Pozycja
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'data'
                \-[IDENT] Node: 'Pozycja'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Pozycja (<no alias>) -> pozycja0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} POZYCJE pozycja0_ ) )
Derived SELECT clause created.
Using FROM fragment [POZYCJE pozycja0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (POZYCJE)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'pozycja0_.ID_POZYCJI as ID_POZYC1_4_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=POZYCJE,tableAlias=pozycja0_,origin=null,columns={,className=data.Pozycja}}}
    |  \-[SQL_TOKEN] SqlFragment: 'pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_, pozycja0_.NAZWA as NAZWA2_4_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[pozycja0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'POZYCJE pozycja0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=POZYCJE,tableAlias=pozycja0_,origin=null,columns={,className=data.Pozycja}}

throwQueryException() : no errors
HQL: from data.Pozycja
SQL: select pozycja0_.ID_POZYCJI as ID_POZYC1_4_, pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_, pozycja0_.NAZWA as NAZWA2_4_, pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_ from POZYCJE pozycja0_
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [data.Mecz.druzyny#7], was: [data.Mecz.druzyny#7] (uninitialized)
Collection found: [data.Mecz.pozycje#7], was: [data.Mecz.pozycje#7] (uninitialized)
Collection found: [data.Mecz.statystyki#7], was: [data.Mecz.statystyki#7] (uninitialized)
Collection found: [data.Mecz.druzyny#8], was: [data.Mecz.druzyny#8] (uninitialized)
Collection found: [data.Mecz.pozycje#8], was: [data.Mecz.pozycje#8] (uninitialized)
Collection found: [data.Mecz.statystyki#8], was: [data.Mecz.statystyki#8] (uninitialized)
Collection found: [data.Mecz.druzyny#9], was: [data.Mecz.druzyny#9] (uninitialized)
Collection found: [data.Mecz.pozycje#9], was: [data.Mecz.pozycje#9] (uninitialized)
Collection found: [data.Mecz.statystyki#9], was: [data.Mecz.statystyki#9] (uninitialized)
Collection found: [data.Mecz.druzyny#10], was: [data.Mecz.druzyny#10] (uninitialized)
Collection found: [data.Mecz.pozycje#10], was: [data.Mecz.pozycje#10] (uninitialized)
Collection found: [data.Mecz.statystyki#10], was: [data.Mecz.statystyki#10] (uninitialized)
Collection found: [data.Druzyna.mecz#3], was: [data.Druzyna.mecz#3] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#3], was: [data.Druzyna.zawodnicy#3] (uninitialized)
Collection found: [data.Druzyna.mecz#4], was: [data.Druzyna.mecz#4] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#4], was: [data.Druzyna.zawodnicy#4] (uninitialized)
Collection found: [data.Druzyna.mecz#5], was: [data.Druzyna.mecz#5] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#5], was: [data.Druzyna.zawodnicy#5] (uninitialized)
Collection found: [data.Druzyna.mecz#6], was: [data.Druzyna.mecz#6] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#6], was: [data.Druzyna.zawodnicy#6] (uninitialized)
Collection found: [data.Pozycja.meczs#11], was: [data.Pozycja.meczs#11] (uninitialized)
Collection found: [data.Pozycja.meczs#12], was: [data.Pozycja.meczs#12] (uninitialized)
Collection found: [data.Pozycja.meczs#13], was: [data.Pozycja.meczs#13] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 28 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 23 collections
Listing entities:
data.Druzyna{kraj=San Escobar, zawodnicy=<uninitialized>, id=6, mecz=<uninitialized>, trener=null}
data.Pozycja{id=13, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#34, nazwa=BRAMKARZ}
data.Pozycja{id=12, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#33, nazwa=OBRONCA}
data.Pozycja{id=11, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#32, nazwa=NAPASTNIK}
data.RodzajStatystyki{id=17, opis=SPALONE}
data.RodzajStatystyki{id=16, opis=AUTY}
data.Druzyna{kraj=Polska, zawodnicy=<uninitialized>, id=3, mecz=<uninitialized>, trener=data.Trener#29}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#22, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=97369200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1973,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=7, statystyki=<uninitialized>}
data.Druzyna{kraj=Czechy, zawodnicy=<uninitialized>, id=4, mecz=<uninitialized>, trener=data.Trener#30}
data.Druzyna{kraj=Ekwador, zawodnicy=<uninitialized>, id=5, mecz=<uninitialized>, trener=data.Trener#31}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#24, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=232239600000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1977,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=9, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#23, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=165106800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1975,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=86,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=8, statystyki=<uninitialized>}
data.Zawodnik{imie=Lionel, nazwisko=Messi, druzyna=data.Druzyna#6, id=34, pozycja=data.Pozycja#13}
data.Mecz{druzyny=<uninitialized>, stadion=null, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=1514761200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2018,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=10, statystyki=<uninitialized>}
data.Zawodnik{imie=Cristiano, nazwisko=Ronaldo, druzyna=data.Druzyna#5, id=33, pozycja=data.Pozycja#12}
data.Stadion{id=22, nazwa=STADION NARODOWY, lokalizacja=WARSZAWA}
data.RodzajStatystyki{id=18, opis=PUNKTOW}
data.RodzajStatystyki{id=20, opis=BRAMEK}
data.Zawodnik{imie=Robert, nazwisko=Lewandowski, druzyna=data.Druzyna#5, id=32, pozycja=data.Pozycja#11}
data.Trener{imie=Apoloniusz, nazwisko=Tajner, druzyna=data.Druzyna#5, id=31}
data.Trener{imie=Piotr, nazwisko=Maszewski, druzyna=data.Druzyna#4, id=30}
More......

    select
        pozycja0_.ID_POZYCJI as ID_POZYC1_4_,
        pozycja0_.mecz_ID_MECZU as mecz_ID_3_4_,
        pozycja0_.NAZWA as NAZWA2_4_,
        pozycja0_.ID_ZAWODNIKA as ID_ZAWOD4_4_ 
    from
        POZYCJE pozycja0_
Result set row: 0
Result row: EntityKey[data.Pozycja#11]
Result set row: 1
Result row: EntityKey[data.Pozycja#12]
Result set row: 2
Result row: EntityKey[data.Pozycja#13]
Result set row: 3
Result row: EntityKey[data.Pozycja#14]
Result set row: 4
Result row: EntityKey[data.Pozycja#15]
Resolving associations for [data.Pozycja#14]
Done materializing entity [data.Pozycja#14]
Resolving associations for [data.Pozycja#15]
Done materializing entity [data.Pozycja#15]
parse() - HQL: from data.Stadion
--- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[IDENT] Node: 'data'
                \-[IDENT] Node: 'Stadion'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Stadion (<no alias>) -> stadion0_
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( FromClause{level=1} STADIONY stadion0_ ) )
Derived SELECT clause created.
Using FROM fragment [STADIONY stadion0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STADIONY)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'stadion0_.ID_STADIONU as ID_STADI1_7_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=STADIONY,tableAlias=stadion0_,origin=null,columns={,className=data.Stadion}}}
    |  \-[SQL_TOKEN] SqlFragment: 'stadion0_.LOKALIZACJA as LOKALIZA2_7_, stadion0_.NAZWA as NAZWA3_7_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[stadion0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STADIONY stadion0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=STADIONY,tableAlias=stadion0_,origin=null,columns={,className=data.Stadion}}

throwQueryException() : no errors
HQL: from data.Stadion
SQL: select stadion0_.ID_STADIONU as ID_STADI1_7_, stadion0_.LOKALIZACJA as LOKALIZA2_7_, stadion0_.NAZWA as NAZWA3_7_ from STADIONY stadion0_
throwQueryException() : no errors
Processing flush-time cascades
Dirty checking collections
Collection found: [data.Mecz.druzyny#7], was: [data.Mecz.druzyny#7] (uninitialized)
Collection found: [data.Mecz.pozycje#7], was: [data.Mecz.pozycje#7] (uninitialized)
Collection found: [data.Mecz.statystyki#7], was: [data.Mecz.statystyki#7] (uninitialized)
Collection found: [data.Mecz.druzyny#8], was: [data.Mecz.druzyny#8] (uninitialized)
Collection found: [data.Mecz.pozycje#8], was: [data.Mecz.pozycje#8] (uninitialized)
Collection found: [data.Mecz.statystyki#8], was: [data.Mecz.statystyki#8] (uninitialized)
Collection found: [data.Mecz.druzyny#9], was: [data.Mecz.druzyny#9] (uninitialized)
Collection found: [data.Mecz.pozycje#9], was: [data.Mecz.pozycje#9] (uninitialized)
Collection found: [data.Mecz.statystyki#9], was: [data.Mecz.statystyki#9] (uninitialized)
Collection found: [data.Mecz.druzyny#10], was: [data.Mecz.druzyny#10] (uninitialized)
Collection found: [data.Mecz.pozycje#10], was: [data.Mecz.pozycje#10] (uninitialized)
Collection found: [data.Mecz.statystyki#10], was: [data.Mecz.statystyki#10] (uninitialized)
Collection found: [data.Druzyna.mecz#3], was: [data.Druzyna.mecz#3] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#3], was: [data.Druzyna.zawodnicy#3] (uninitialized)
Collection found: [data.Druzyna.mecz#4], was: [data.Druzyna.mecz#4] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#4], was: [data.Druzyna.zawodnicy#4] (uninitialized)
Collection found: [data.Druzyna.mecz#5], was: [data.Druzyna.mecz#5] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#5], was: [data.Druzyna.zawodnicy#5] (uninitialized)
Collection found: [data.Druzyna.mecz#6], was: [data.Druzyna.mecz#6] (uninitialized)
Collection found: [data.Druzyna.zawodnicy#6], was: [data.Druzyna.zawodnicy#6] (uninitialized)
Collection found: [data.Pozycja.meczs#11], was: [data.Pozycja.meczs#11] (uninitialized)
Collection found: [data.Pozycja.meczs#12], was: [data.Pozycja.meczs#12] (uninitialized)
Collection found: [data.Pozycja.meczs#13], was: [data.Pozycja.meczs#13] (uninitialized)
Collection found: [data.Pozycja.meczs#14], was: [data.Pozycja.meczs#14] (uninitialized)
Collection found: [data.Pozycja.meczs#15], was: [data.Pozycja.meczs#15] (uninitialized)
Flushed: 0 insertions, 0 updates, 0 deletions to 30 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 25 collections
Listing entities:
data.Druzyna{kraj=San Escobar, zawodnicy=<uninitialized>, id=6, mecz=<uninitialized>, trener=null}
data.Pozycja{id=14, meczs=<uninitialized>, mecz=null, zawodnik=null, nazwa=POMOCNIK}
data.Pozycja{id=13, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#34, nazwa=BRAMKARZ}
data.Pozycja{id=12, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#33, nazwa=OBRONCA}
data.Pozycja{id=11, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#32, nazwa=NAPASTNIK}
data.RodzajStatystyki{id=17, opis=SPALONE}
data.RodzajStatystyki{id=16, opis=AUTY}
data.Druzyna{kraj=Polska, zawodnicy=<uninitialized>, id=3, mecz=<uninitialized>, trener=data.Trener#29}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#22, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=97369200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1973,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=7, statystyki=<uninitialized>}
data.Druzyna{kraj=Czechy, zawodnicy=<uninitialized>, id=4, mecz=<uninitialized>, trener=data.Trener#30}
data.Druzyna{kraj=Ekwador, zawodnicy=<uninitialized>, id=5, mecz=<uninitialized>, trener=data.Trener#31}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#24, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=232239600000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1977,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=9, statystyki=<uninitialized>}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#23, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=165106800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1975,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=86,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=8, statystyki=<uninitialized>}
data.Zawodnik{imie=Lionel, nazwisko=Messi, druzyna=data.Druzyna#6, id=34, pozycja=data.Pozycja#13}
data.Mecz{druzyny=<uninitialized>, stadion=null, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=1514761200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2018,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=10, statystyki=<uninitialized>}
data.Zawodnik{imie=Cristiano, nazwisko=Ronaldo, druzyna=data.Druzyna#5, id=33, pozycja=data.Pozycja#12}
data.Stadion{id=22, nazwa=STADION NARODOWY, lokalizacja=WARSZAWA}
data.RodzajStatystyki{id=18, opis=PUNKTOW}
data.RodzajStatystyki{id=20, opis=BRAMEK}
data.Zawodnik{imie=Robert, nazwisko=Lewandowski, druzyna=data.Druzyna#5, id=32, pozycja=data.Pozycja#11}
data.Trener{imie=Apoloniusz, nazwisko=Tajner, druzyna=data.Druzyna#5, id=31}
More......

    select
        stadion0_.ID_STADIONU as ID_STADI1_7_,
        stadion0_.LOKALIZACJA as LOKALIZA2_7_,
        stadion0_.NAZWA as NAZWA3_7_ 
    from
        STADIONY stadion0_
Result set row: 0
Result row: EntityKey[data.Stadion#22]
Result set row: 1
Result row: EntityKey[data.Stadion#23]
Result set row: 2
Result row: EntityKey[data.Stadion#24]
committing
Processing flush-time cascades
Dirty checking collections
Collection found: [data.Mecz.druzyny#7], was: [<unreferenced>] (initialized)
Collection found: [data.Mecz.pozycje#7], was: [<unreferenced>] (initialized)
Collection found: [data.Mecz.statystyki#7], was: [<unreferenced>] (initialized)
Collection found: [data.Mecz.druzyny#8], was: [<unreferenced>] (initialized)
Collection found: [data.Mecz.pozycje#8], was: [data.Mecz.pozycje#8] (uninitialized)
Collection found: [data.Mecz.statystyki#8], was: [data.Mecz.statystyki#8] (uninitialized)
Collection found: [data.Mecz.druzyny#9], was: [data.Mecz.druzyny#9] (uninitialized)
Collection found: [data.Mecz.pozycje#9], was: [data.Mecz.pozycje#9] (uninitialized)
Collection found: [data.Mecz.statystyki#9], was: [data.Mecz.statystyki#9] (uninitialized)
Collection found: [data.Mecz.druzyny#10], was: [data.Mecz.druzyny#10] (uninitialized)
Collection found: [data.Mecz.pozycje#10], was: [data.Mecz.pozycje#10] (uninitialized)
Collection found: [data.Mecz.statystyki#10], was: [data.Mecz.statystyki#10] (uninitialized)
Collection found: [data.Druzyna.mecz#3], was: [<unreferenced>] (initialized)
Collection found: [data.Druzyna.zawodnicy#3], was: [data.Druzyna.zawodnicy#3] (uninitialized)
Collection found: [data.Druzyna.mecz#4], was: [<unreferenced>] (initialized)
Collection found: [data.Druzyna.zawodnicy#4], was: [data.Druzyna.zawodnicy#4] (uninitialized)
Collection found: [data.Druzyna.mecz#5], was: [<unreferenced>] (initialized)
Collection found: [data.Druzyna.zawodnicy#5], was: [data.Druzyna.zawodnicy#5] (uninitialized)
Collection found: [data.Druzyna.mecz#6], was: [<unreferenced>] (initialized)
Collection found: [data.Druzyna.zawodnicy#6], was: [data.Druzyna.zawodnicy#6] (uninitialized)
Collection found: [data.Pozycja.meczs#11], was: [data.Pozycja.meczs#11] (uninitialized)
Collection found: [data.Pozycja.meczs#12], was: [data.Pozycja.meczs#12] (uninitialized)
Collection found: [data.Pozycja.meczs#13], was: [data.Pozycja.meczs#13] (uninitialized)
Collection found: [data.Pozycja.meczs#14], was: [data.Pozycja.meczs#14] (uninitialized)
Collection found: [data.Pozycja.meczs#15], was: [data.Pozycja.meczs#15] (uninitialized)
Collection dereferenced: [data.Mecz.druzyny#7]
Collection dereferenced: [data.Mecz.pozycje#7]
Collection dereferenced: [data.Mecz.statystyki#7]
Collection dereferenced: [data.Mecz.druzyny#8]
Collection dereferenced: [data.Druzyna.mecz#3]
Collection dereferenced: [data.Druzyna.mecz#4]
Collection dereferenced: [data.Druzyna.mecz#5]
Collection dereferenced: [data.Druzyna.mecz#6]
Flushed: 0 insertions, 6 updates, 0 deletions to 30 objects
Flushed: 8 (re)creations, 0 updates, 8 removals to 33 collections
Listing entities:
data.Druzyna{kraj=San Escobar, zawodnicy=<uninitialized>, id=6, mecz=[data.Mecz#8], trener=null}
data.Pozycja{id=14, meczs=<uninitialized>, mecz=null, zawodnik=null, nazwa=POMOCNIK}
data.Pozycja{id=13, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#34, nazwa=BRAMKARZ}
data.Pozycja{id=12, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#33, nazwa=OBRONCA}
data.Pozycja{id=11, meczs=<uninitialized>, mecz=data.Mecz#7, zawodnik=data.Zawodnik#32, nazwa=NAPASTNIK}
data.RodzajStatystyki{id=17, opis=SPALONE}
data.RodzajStatystyki{id=16, opis=AUTY}
data.Druzyna{kraj=Polska, zawodnicy=<uninitialized>, id=3, mecz=[data.Mecz#7], trener=data.Trener#29}
data.Mecz{druzyny=[data.Druzyna#3, data.Druzyna#4], stadion=data.Stadion#22, pozycje=[data.Pozycja#11, data.Pozycja#12, data.Pozycja#13], termin=java.util.GregorianCalendar[time=97369200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1973,MONTH=1,WEEK_OF_YEAR=5,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=32,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=7, statystyki=[data.Statystyki#25, data.Statystyki#26]}
data.Druzyna{kraj=Czechy, zawodnicy=<uninitialized>, id=4, mecz=[data.Mecz#7], trener=data.Trener#30}
data.Druzyna{kraj=Ekwador, zawodnicy=<uninitialized>, id=5, mecz=[data.Mecz#8], trener=data.Trener#31}
data.Mecz{druzyny=<uninitialized>, stadion=data.Stadion#24, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=232239600000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1977,MONTH=4,WEEK_OF_YEAR=19,WEEK_OF_MONTH=2,DAY_OF_MONTH=12,DAY_OF_YEAR=132,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=2,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=9, statystyki=<uninitialized>}
data.Mecz{druzyny=[data.Druzyna#5, data.Druzyna#6], stadion=data.Stadion#23, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=165106800000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=1975,MONTH=2,WEEK_OF_YEAR=13,WEEK_OF_MONTH=4,DAY_OF_MONTH=27,DAY_OF_YEAR=86,DAY_OF_WEEK=5,DAY_OF_WEEK_IN_MONTH=4,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=8, statystyki=<uninitialized>}
data.Zawodnik{imie=Lionel, nazwisko=Messi, druzyna=data.Druzyna#6, id=34, pozycja=data.Pozycja#13}
data.Mecz{druzyny=<uninitialized>, stadion=null, pozycje=<uninitialized>, termin=java.util.GregorianCalendar[time=1514761200000,areFieldsSet=true,areAllFieldsSet=true,lenient=true,zone=sun.util.calendar.ZoneInfo[id="Europe/Belgrade",offset=3600000,dstSavings=3600000,useDaylight=true,transitions=119,lastRule=java.util.SimpleTimeZone[id=Europe/Belgrade,offset=3600000,dstSavings=3600000,useDaylight=true,startYear=0,startMode=2,startMonth=2,startDay=-1,startDayOfWeek=1,startTime=3600000,startTimeMode=2,endMode=2,endMonth=9,endDay=-1,endDayOfWeek=1,endTime=3600000,endTimeMode=2]],firstDayOfWeek=2,minimalDaysInFirstWeek=4,ERA=1,YEAR=2018,MONTH=0,WEEK_OF_YEAR=1,WEEK_OF_MONTH=1,DAY_OF_MONTH=1,DAY_OF_YEAR=1,DAY_OF_WEEK=2,DAY_OF_WEEK_IN_MONTH=1,AM_PM=0,HOUR=0,HOUR_OF_DAY=0,MINUTE=0,SECOND=0,MILLISECOND=0,ZONE_OFFSET=3600000,DST_OFFSET=0], id=10, statystyki=<uninitialized>}
data.Zawodnik{imie=Cristiano, nazwisko=Ronaldo, druzyna=data.Druzyna#5, id=33, pozycja=data.Pozycja#12}
data.Stadion{id=22, nazwa=STADION NARODOWY, lokalizacja=WARSZAWA}
data.RodzajStatystyki{id=18, opis=PUNKTOW}
data.RodzajStatystyki{id=20, opis=BRAMEK}
data.Zawodnik{imie=Robert, nazwisko=Lewandowski, druzyna=data.Druzyna#5, id=32, pozycja=data.Pozycja#11}
data.Trener{imie=Apoloniusz, nazwisko=Tajner, druzyna=data.Druzyna#5, id=31}
More......
Deleting collection: [data.Mecz.statystyki#7]

    update
        STATYSTYKI 
    set
        ID_MECZU=null 
    where
        ID_MECZU=?
Done deleting collection
Deleting collection: [data.Druzyna.mecz#3]

    delete 
    from
        DRUZYNY_MECZ 
    where
        druzyny_ID_DRUZYNY=?
Done deleting collection
Deleting collection: [data.Druzyna.mecz#4]

    delete 
    from
        DRUZYNY_MECZ 
    where
        druzyny_ID_DRUZYNY=?
Done deleting collection
Deleting collection: [data.Druzyna.mecz#5]

    delete 
    from
        DRUZYNY_MECZ 
    where
        druzyny_ID_DRUZYNY=?
Done deleting collection
Deleting collection: [data.Druzyna.mecz#6]

    delete 
    from
        DRUZYNY_MECZ 
    where
        druzyny_ID_DRUZYNY=?
Done deleting collection
Inserting collection: [data.Mecz.statystyki#7]

    update
        STATYSTYKI 
    set
        ID_MECZU=? 
    where
        ID_STATYSTYKI=?

    update
        STATYSTYKI 
    set
        ID_MECZU=? 
    where
        ID_STATYSTYKI=?
Done inserting collection: 2 rows inserted
Inserting collection: [data.Druzyna.mecz#3]

    insert 
    into
        DRUZYNY_MECZ
        (druzyny_ID_DRUZYNY, mecz_ID_MECZU) 
    values
        (?, ?)
Done inserting collection: 1 rows inserted
Inserting collection: [data.Druzyna.mecz#4]

    insert 
    into
        DRUZYNY_MECZ
        (druzyny_ID_DRUZYNY, mecz_ID_MECZU) 
    values
        (?, ?)
Done inserting collection: 1 rows inserted
Inserting collection: [data.Druzyna.mecz#5]

    insert 
    into
        DRUZYNY_MECZ
        (druzyny_ID_DRUZYNY, mecz_ID_MECZU) 
    values
        (?, ?)
Done inserting collection: 1 rows inserted
Inserting collection: [data.Druzyna.mecz#6]

    insert 
    into
        DRUZYNY_MECZ
        (druzyny_ID_DRUZYNY, mecz_ID_MECZU) 
    values
        (?, ?)
Done inserting collection: 1 rows inserted
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
HHH000420: Closing un-released batch
begin

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_,
        druzyna0_.KRAJ as KRAJ2_0_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_ 
    from
        DRUZYNY druzyna0_
Result set row: 0
Result row: EntityKey[data.Druzyna#3]
Result set row: 1
Result row: EntityKey[data.Druzyna#4]
Result set row: 2
Result row: EntityKey[data.Druzyna#5]
Result set row: 3
Result row: EntityKey[data.Druzyna#6]
Resolving associations for [data.Druzyna#3]

    select
        trener0_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener0_.IMIE as IMIE3_3_0_,
        trener0_.NAZWISKO as NAZWISKO4_3_0_,
        druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna1_.KRAJ as KRAJ2_0_1_,
        druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ 
    from
        OSOBY trener0_ 
    left outer join
        DRUZYNY druzyna1_ 
            on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY 
    where
        trener0_.ID_OSOBY=? 
        and trener0_.DTYPE='Trener'
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Trener#29]
Loading entity: [data.Druzyna#29]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#29], EntityKey[data.Druzyna#3]
Done entity load
Done materializing entity [data.Trener#29]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Trener#29
Done materializing entity [data.Druzyna#3]
Resolving associations for [data.Druzyna#4]

    select
        trener0_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener0_.IMIE as IMIE3_3_0_,
        trener0_.NAZWISKO as NAZWISKO4_3_0_,
        druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna1_.KRAJ as KRAJ2_0_1_,
        druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ 
    from
        OSOBY trener0_ 
    left outer join
        DRUZYNY druzyna1_ 
            on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY 
    where
        trener0_.ID_OSOBY=? 
        and trener0_.DTYPE='Trener'
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Trener#30]
Loading entity: [data.Druzyna#30]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#30], EntityKey[data.Druzyna#4]
Done entity load
Done materializing entity [data.Trener#30]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Trener#30
Done materializing entity [data.Druzyna#4]
Resolving associations for [data.Druzyna#5]

    select
        trener0_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener0_.IMIE as IMIE3_3_0_,
        trener0_.NAZWISKO as NAZWISKO4_3_0_,
        druzyna1_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna1_.KRAJ as KRAJ2_0_1_,
        druzyna1_.trener_ID_OSOBY as trener_I3_0_1_ 
    from
        OSOBY trener0_ 
    left outer join
        DRUZYNY druzyna1_ 
            on trener0_.ID_OSOBY=druzyna1_.trener_ID_OSOBY 
    where
        trener0_.ID_OSOBY=? 
        and trener0_.DTYPE='Trener'
Starting ResultSet row #0
On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
Resolving associations for [data.Trener#31]
Loading entity: [data.Druzyna#31]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#31], EntityKey[data.Druzyna#5]
Done entity load
Done materializing entity [data.Trener#31]
HHH000387: ResultSet's statement was not registered
Done entity load : data.Trener#31
Done materializing entity [data.Druzyna#5]
Resolving associations for [data.Druzyna#6]
Done materializing entity [data.Druzyna#6]
begin
parse() - HQL: select d.zawodnicy.size from data.Druzyna d WHERE d.kraj= :krj
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'data'
    |  |     |  \-[IDENT] Node: 'Druzyna'
    |  |     \-[ALIAS] Node: 'd'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 'd'
    |        |  \-[IDENT] Node: 'zawodnicy'
    |        \-[IDENT] Node: 'size'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'd'
          |  \-[IDENT] Node: 'kraj'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'krj'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Druzyna (d) -> druzyna0_
Resolved : d -> druzyna0_.ID_DRUZYNY
getDataType() : zawodnicy -> org.hibernate.type.SetType(data.Druzyna.zawodnicy)
createEntityAssociation() : One to many - path = d.zawodnicy role = data.Druzyna.zawodnicy associatedEntityName = data.Zawodnik
FromClause{level=1} : data.Zawodnik (<no alias>) -> zawodnicy1_
addJoinByPathMap() : d.zawodnicy -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=OSOBY,tableAlias=zawodnicy1_,origin=DRUZYNY druzyna0_,columns={druzyna0_.ID_DRUZYNY ,className=data.Zawodnik}}
dereferenceCollection() : Created new FROM element for d.zawodnicy : OSOBY zawodnicy1_
Resolved : d.zawodnicy -> .
getDataType() : size -> org.hibernate.type.IntegerType@77846d2c
HHH90000016: Found use of deprecated 'collection property' syntax in HQL/JPQL query [null.size]; use collection function syntax instead [size(null)].
toColumns(zawodnicy1_,size) : subquery = select count(zawodnicy1_.druzyna_ID_DRUZYNY) from OSOBY zawodnicy1_ where druzyna0_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY and zawodnicy1_.DTYPE='Zawodnik'
Resolved : d.zawodnicy.size -> (select count(zawodnicy1_.druzyna_ID_DRUZYNY) from OSOBY zawodnicy1_ where druzyna0_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY and zawodnicy1_.DTYPE='Zawodnik')
Resolved : d -> druzyna0_.ID_DRUZYNY
getDataType() : kraj -> org.hibernate.type.StringType@6d3af739
Resolved : d.kraj -> druzyna0_.KRAJ
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( (select count(zawodnicy1_.druzyna_ID_DRUZYNY) from OSOBY zawodnicy1_ where druzyna0_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY and zawodnicy1_.DTYPE='Zawodnik') ( . druzyna0_.ID_DRUZYNY zawodnicy ) size ) ) ( FromClause{level=1} ( DRUZYNY druzyna0_  ) ) ( WHERE ( = ( druzyna0_.KRAJ druzyna0_.ID_DRUZYNY kraj ) ? ) ) )
Using FROM fragment [DRUZYNY druzyna0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (OSOBY,DRUZYNY)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: '(select count(zawodnicy1_.druzyna_ID_DRUZYNY) from OSOBY zawodnicy1_ where druzyna0_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY and zawodnicy1_.DTYPE='Zawodnik')' {propertyName=size,dereferenceType=PRIMITIVE,getPropertyPath=size,path=d.zawodnicy.size,tableAlias=zawodnicy1_,className=data.Zawodnik,classAlias=null}
    |  |  +-[DOT] DotNode: '.' {propertyName=zawodnicy,dereferenceType=COLLECTION,getPropertyPath=zawodnicy,path=d.zawodnicy,tableAlias=zawodnicy1_,className=data.Zawodnik,classAlias=null}
    |  |  |  +-[ALIAS_REF] IdentNode: 'druzyna0_.ID_DRUZYNY' {alias=d, className=data.Druzyna, tableAlias=druzyna0_}
    |  |  |  \-[IDENT] IdentNode: 'zawodnicy' {originalText=zawodnicy}
    |  |  \-[IDENT] IdentNode: 'size' {originalText=size}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[d], fromElementByTableAlias=[zawodnicy1_, druzyna0_], fromElementsByPath=[d.zawodnicy], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DRUZYNY druzyna0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DRUZYNY,tableAlias=druzyna0_,origin=null,columns={,className=data.Druzyna}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: '' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=data.Druzyna.zawodnicy,tableName=OSOBY,tableAlias=zawodnicy1_,origin=DRUZYNY druzyna0_,columns={druzyna0_.ID_DRUZYNY ,className=data.Zawodnik}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'druzyna0_.KRAJ' {propertyName=kraj,dereferenceType=PRIMITIVE,getPropertyPath=kraj,path=d.kraj,tableAlias=druzyna0_,className=data.Druzyna,classAlias=d}
          |  +-[ALIAS_REF] IdentNode: 'druzyna0_.ID_DRUZYNY' {alias=d, className=data.Druzyna, tableAlias=druzyna0_}
          |  \-[IDENT] IdentNode: 'kraj' {originalText=kraj}
          \-[NAMED_PARAM] ParameterNode: '?' {name=krj, expectedType=org.hibernate.type.StringType@6d3af739}

throwQueryException() : no errors
HQL: select d.zawodnicy.size from data.Druzyna d WHERE d.kraj= :krj
SQL: select (select count(zawodnicy1_.druzyna_ID_DRUZYNY) from OSOBY zawodnicy1_ where druzyna0_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY and zawodnicy1_.DTYPE='Zawodnik') as col_0_0_ from DRUZYNY druzyna0_ where druzyna0_.KRAJ=?
throwQueryException() : no errors
begin
begin
begin
begin
HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead

    select
        this_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        this_.KRAJ as KRAJ2_0_1_,
        this_.trener_ID_OSOBY as trener_I3_0_1_,
        trener2_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener2_.IMIE as IMIE3_3_0_,
        trener2_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY this_ 
    left outer join
        OSOBY trener2_ 
            on this_.trener_ID_OSOBY=trener2_.ID_OSOBY
Result set row: 0
Result row: EntityKey[data.Trener#29], EntityKey[data.Druzyna#3]
Result set row: 1
Result row: EntityKey[data.Trener#30], EntityKey[data.Druzyna#4]
Result set row: 2
Result row: EntityKey[data.Trener#31], EntityKey[data.Druzyna#5]
Result set row: 3
Result row: null, EntityKey[data.Druzyna#6]
Resolving associations for [data.Trener#29]
Loading entity: [data.Druzyna#29]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#29], EntityKey[data.Druzyna#3]
Done entity load
Done materializing entity [data.Trener#29]
Resolving associations for [data.Druzyna#3]
Done materializing entity [data.Druzyna#3]
Resolving associations for [data.Trener#30]
Loading entity: [data.Druzyna#30]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#30], EntityKey[data.Druzyna#4]
Done entity load
Done materializing entity [data.Trener#30]
Resolving associations for [data.Druzyna#4]
Done materializing entity [data.Druzyna#4]
Resolving associations for [data.Trener#31]
Loading entity: [data.Druzyna#31]

    select
        druzyna0_.ID_DRUZYNY as ID_DRUZY1_0_1_,
        druzyna0_.KRAJ as KRAJ2_0_1_,
        druzyna0_.trener_ID_OSOBY as trener_I3_0_1_,
        trener1_.ID_OSOBY as ID_OSOBY2_3_0_,
        trener1_.IMIE as IMIE3_3_0_,
        trener1_.NAZWISKO as NAZWISKO4_3_0_ 
    from
        DRUZYNY druzyna0_ 
    left outer join
        OSOBY trener1_ 
            on druzyna0_.trener_ID_OSOBY=trener1_.ID_OSOBY 
    where
        druzyna0_.trener_ID_OSOBY=?
Result set row: 0
Result row: EntityKey[data.Trener#31], EntityKey[data.Druzyna#5]
Done entity load
Done materializing entity [data.Trener#31]
Resolving associations for [data.Druzyna#5]
Done materializing entity [data.Druzyna#5]
Resolving associations for [data.Druzyna#6]
Done materializing entity [data.Druzyna#6]
begin
HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead

    select
        count(*) as y0_ 
    from
        DRUZYNY this_ 
    inner join
        OSOBY zawodnicy1_ 
            on this_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY 
    where
        this_.KRAJ=?
Result set row: 0
Result row: 
begin
HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead

    select
        count(*) as y0_ 
    from
        DRUZYNY this_ 
    inner join
        OSOBY zawodnicy1_ 
            on this_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY 
    where
        this_.KRAJ=?
Result set row: 0
Result row: 
begin
HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead

    select
        count(*) as y0_ 
    from
        DRUZYNY this_ 
    inner join
        OSOBY zawodnicy1_ 
            on this_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY 
    where
        this_.KRAJ=?
Result set row: 0
Result row: 
begin
HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead

    select
        count(*) as y0_ 
    from
        DRUZYNY this_ 
    inner join
        OSOBY zawodnicy1_ 
            on this_.ID_DRUZYNY=zawodnicy1_.druzyna_ID_DRUZYNY 
    where
        this_.KRAJ=?
Result set row: 0
Result row: 
begin
parse() - HQL: select d.kraj from data.Druzyna d INNER JOIN d.mecz z WHERE z.termin=:term
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'data'
    |  |  |  |  \-[IDENT] Node: 'Druzyna'
    |  |  |  \-[ALIAS] Node: 'd'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[INNER] Node: 'INNER'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 'd'
    |  |     |  \-[IDENT] Node: 'mecz'
    |  |     \-[ALIAS] Node: 'z'
    |  \-[SELECT] Node: 'select'
    |     \-[DOT] Node: '.'
    |        +-[IDENT] Node: 'd'
    |        \-[IDENT] Node: 'kraj'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'z'
          |  \-[IDENT] Node: 'termin'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'term'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Druzyna (d) -> druzyna0_
Resolved : d -> druzyna0_.ID_DRUZYNY
getDataType() : mecz -> org.hibernate.type.SetType(data.Druzyna.mecz)
createManyToMany() : path = d.mecz role = data.Druzyna.mecz associatedEntityName = data.Mecz
FromClause{level=1} : data.Mecz (z) -> mecz2_
addJoinByPathMap() : d.mecz -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=null,tableName=MECZ,tableAlias=mecz2_,origin=DRUZYNY druzyna0_,columns={druzyna0_.ID_DRUZYNY ,className=data.Mecz}}
dereferenceCollection() : Created new FROM element for d.mecz : DRUZYNY_MECZ mecz2_
Resolved : d.mecz -> .
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'DRUZYNY_MECZ mecz2_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=data.Druzyna.mecz,tableName=MECZ,tableAlias=mecz2_,origin=DRUZYNY druzyna0_,columns={druzyna0_.ID_DRUZYNY ,className=data.Mecz}}

Resolved : d -> druzyna0_.ID_DRUZYNY
getDataType() : kraj -> org.hibernate.type.StringType@6d3af739
Resolved : d.kraj -> druzyna0_.KRAJ
Resolved : z -> mecz2_.ID_MECZU
getDataType() : termin -> org.hibernate.type.CalendarType@31206beb
Resolved : z.termin -> mecz2_.TERMIN
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( druzyna0_.KRAJ druzyna0_.ID_DRUZYNY kraj ) ) ( FromClause{level=1} ( DRUZYNY druzyna0_ DRUZYNY_MECZ mecz2_ ) ) ( WHERE ( = ( mecz2_.TERMIN mecz2_.ID_MECZU termin ) ? ) ) )
Using FROM fragment [DRUZYNY druzyna0_]
Using FROM fragment [inner join DRUZYNY_MECZ mecz1_ on druzyna0_.ID_DRUZYNY=mecz1_.druzyny_ID_DRUZYNY inner join MECZ mecz2_ on mecz1_.mecz_ID_MECZU=mecz2_.ID_MECZU]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (DRUZYNY_MECZ,MECZ,DRUZYNY)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[DOT] DotNode: 'druzyna0_.KRAJ' {propertyName=kraj,dereferenceType=PRIMITIVE,getPropertyPath=kraj,path=d.kraj,tableAlias=druzyna0_,className=data.Druzyna,classAlias=d}
    |  |  +-[ALIAS_REF] IdentNode: 'druzyna0_.ID_DRUZYNY' {alias=d, className=data.Druzyna, tableAlias=druzyna0_}
    |  |  \-[IDENT] IdentNode: 'kraj' {originalText=kraj}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=2, fromElements=2, fromElementByClassAlias=[d, z], fromElementByTableAlias=[mecz2_, druzyna0_], fromElementsByPath=[d.mecz], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'DRUZYNY druzyna0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=d,role=null,tableName=DRUZYNY,tableAlias=druzyna0_,origin=null,columns={,className=data.Druzyna}}
    |     \-[JOIN_FRAGMENT] FromElement: 'inner join DRUZYNY_MECZ mecz1_ on druzyna0_.ID_DRUZYNY=mecz1_.druzyny_ID_DRUZYNY inner join MECZ mecz2_ on mecz1_.mecz_ID_MECZU=mecz2_.ID_MECZU' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=z,role=data.Druzyna.mecz,tableName=MECZ,tableAlias=mecz2_,origin=DRUZYNY druzyna0_,columns={druzyna0_.ID_DRUZYNY ,className=data.Mecz}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'mecz2_.TERMIN' {propertyName=termin,dereferenceType=PRIMITIVE,getPropertyPath=termin,path=z.termin,tableAlias=mecz2_,className=data.Mecz,classAlias=z}
          |  +-[ALIAS_REF] IdentNode: 'mecz2_.ID_MECZU' {alias=z, className=data.Mecz, tableAlias=mecz2_}
          |  \-[IDENT] IdentNode: 'termin' {originalText=termin}
          \-[NAMED_PARAM] ParameterNode: '?' {name=term, expectedType=org.hibernate.type.CalendarType@31206beb}

throwQueryException() : no errors
HQL: select d.kraj from data.Druzyna d INNER JOIN d.mecz z WHERE z.termin=:term
SQL: select druzyna0_.KRAJ as col_0_0_ from DRUZYNY druzyna0_ inner join DRUZYNY_MECZ mecz1_ on druzyna0_.ID_DRUZYNY=mecz1_.druzyny_ID_DRUZYNY inner join MECZ mecz2_ on mecz1_.mecz_ID_MECZU=mecz2_.ID_MECZU where mecz2_.TERMIN=?
throwQueryException() : no errors

    select
        druzyna0_.KRAJ as col_0_0_ 
    from
        DRUZYNY druzyna0_ 
    inner join
        DRUZYNY_MECZ mecz1_ 
            on druzyna0_.ID_DRUZYNY=mecz1_.druzyny_ID_DRUZYNY 
    inner join
        MECZ mecz2_ 
            on mecz1_.mecz_ID_MECZU=mecz2_.ID_MECZU 
    where
        mecz2_.TERMIN=?
Result set row: 0
Result row: 
Result set row: 1
Result row: 
begin
HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead

    select
        distinct this_.KRAJ as y0_ 
    from
        DRUZYNY this_ 
    inner join
        DRUZYNY_MECZ mecz3_ 
            on this_.ID_DRUZYNY=mecz3_.druzyny_ID_DRUZYNY 
    inner join
        MECZ mecz1_ 
            on mecz3_.mecz_ID_MECZU=mecz1_.ID_MECZU 
    where
        mecz1_.TERMIN=?
Result set row: 0
Result row: 
Result set row: 1
Result row: 
begin
parse() - HQL: Select max(s.wartosc), s.rodzajStatystyki.opis from data.Statystyki s INNER JOIN s.mecz m WHERE m.termin=:term GROUP BY s.wartosc, s.rodzajStatystyki.opis HAVING max(s.wartosc) < :maks
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  +-[RANGE] Node: 'RANGE'
    |  |  |  +-[DOT] Node: '.'
    |  |  |  |  +-[IDENT] Node: 'data'
    |  |  |  |  \-[IDENT] Node: 'Statystyki'
    |  |  |  \-[ALIAS] Node: 's'
    |  |  \-[JOIN] Node: 'JOIN'
    |  |     +-[INNER] Node: 'INNER'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[IDENT] Node: 's'
    |  |     |  \-[IDENT] Node: 'mecz'
    |  |     \-[ALIAS] Node: 'm'
    |  \-[SELECT] Node: 'Select'
    |     +-[AGGREGATE] Node: 'max'
    |     |  \-[DOT] Node: '.'
    |     |     +-[IDENT] Node: 's'
    |     |     \-[IDENT] Node: 'wartosc'
    |     \-[DOT] Node: '.'
    |        +-[DOT] Node: '.'
    |        |  +-[IDENT] Node: 's'
    |        |  \-[IDENT] Node: 'rodzajStatystyki'
    |        \-[IDENT] Node: 'opis'
    +-[WHERE] Node: 'WHERE'
    |  \-[EQ] Node: '='
    |     +-[DOT] Node: '.'
    |     |  +-[IDENT] Node: 'm'
    |     |  \-[IDENT] Node: 'termin'
    |     \-[COLON] Node: ':'
    |        \-[IDENT] Node: 'term'
    \-[GROUP] Node: 'GROUP'
       +-[DOT] Node: '.'
       |  +-[IDENT] Node: 's'
       |  \-[IDENT] Node: 'wartosc'
       +-[DOT] Node: '.'
       |  +-[DOT] Node: '.'
       |  |  +-[IDENT] Node: 's'
       |  |  \-[IDENT] Node: 'rodzajStatystyki'
       |  \-[IDENT] Node: 'opis'
       \-[HAVING] Node: 'HAVING'
          \-[LT] Node: '<'
             +-[AGGREGATE] Node: 'max'
             |  \-[DOT] Node: '.'
             |     +-[IDENT] Node: 's'
             |     \-[IDENT] Node: 'wartosc'
             \-[COLON] Node: ':'
                \-[IDENT] Node: 'maks'

throwQueryException() : no errors
select << begin [level=1, statement=select]
FromClause{level=1} : data.Statystyki (s) -> statystyki0_
Resolved : s -> statystyki0_.ID_STATYSTYKI
getDataType() : mecz -> org.hibernate.type.ManyToOneType(data.Mecz)
dereferenceEntityJoin() : generating join for mecz in data.Statystyki (m) parent = [ {null} ]
FromClause{level=1} : data.Mecz (m) -> mecz1_
addJoinByPathMap() : s.mecz -> FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=null,tableName=MECZ,tableAlias=mecz1_,origin=STATYSTYKI statystyki0_,columns={statystyki0_.ID_MECZU ,className=data.Mecz}}
Resolved : s.mecz -> statystyki0_.ID_MECZU
createFromJoinElement() : -- join tree --
 \-[JOIN_FRAGMENT] FromElement: 'MECZ mecz1_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=data.Statystyki.mecz,tableName=MECZ,tableAlias=mecz1_,origin=STATYSTYKI statystyki0_,columns={statystyki0_.ID_MECZU ,className=data.Mecz}}

Resolved : s -> statystyki0_.ID_STATYSTYKI
getDataType() : wartosc -> org.hibernate.type.IntegerType@77846d2c
Resolved : s.wartosc -> statystyki0_.WARTOSC
Resolved : s -> statystyki0_.ID_STATYSTYKI
getDataType() : rodzajStatystyki -> org.hibernate.type.ManyToOneType(data.RodzajStatystyki)
dereferenceEntityJoin() : generating join for rodzajStatystyki in data.Statystyki (<no alias>) parent = [  ( . ( . statystyki0_.ID_STATYSTYKI rodzajStatystyki ) opis ) ]
FromClause{level=1} : data.RodzajStatystyki (<no alias>) -> rodzajstat2_
addJoinByPathMap() : s.rodzajStatystyki -> ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=RODZAJSTATYSTYKI,tableAlias=rodzajstat2_,origin=STATYSTYKI statystyki0_,columns={statystyki0_.ID_RODZAJUSTATYSTYKI ,className=data.RodzajStatystyki}}
Resolved : s.rodzajStatystyki -> statystyki0_.ID_RODZAJUSTATYSTYKI
getDataType() : opis -> org.hibernate.type.StringType@6d3af739
Resolved : s.rodzajStatystyki.opis -> rodzajstat2_.OPIS
Resolved : m -> mecz1_.ID_MECZU
getDataType() : termin -> org.hibernate.type.CalendarType@31206beb
Resolved : m.termin -> mecz1_.TERMIN
Resolved : s -> statystyki0_.ID_STATYSTYKI
getDataType() : wartosc -> org.hibernate.type.IntegerType@77846d2c
Resolved : s.wartosc -> statystyki0_.WARTOSC
Resolved : s -> statystyki0_.ID_STATYSTYKI
getDataType() : rodzajStatystyki -> org.hibernate.type.ManyToOneType(data.RodzajStatystyki)
dereferenceEntityJoin() : generating join for rodzajStatystyki in data.Statystyki (<no alias>) parent = [  ( . ( . statystyki0_.ID_STATYSTYKI rodzajStatystyki ) opis ) ]
Resolved : s.rodzajStatystyki -> statystyki0_.ID_RODZAJUSTATYSTYKI
getDataType() : opis -> org.hibernate.type.StringType@6d3af739
Resolved : s.rodzajStatystyki.opis -> rodzajstat2_.OPIS
Resolved : s -> statystyki0_.ID_STATYSTYKI
getDataType() : wartosc -> org.hibernate.type.IntegerType@77846d2c
Resolved : s.wartosc -> statystyki0_.WARTOSC
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} ( max ( statystyki0_.WARTOSC statystyki0_.ID_STATYSTYKI wartosc ) ) ( rodzajstat2_.OPIS ( statystyki0_.ID_RODZAJUSTATYSTYKI statystyki0_.ID_STATYSTYKI rodzajStatystyki ) opis ) ) ( FromClause{level=1} ( STATYSTYKI statystyki0_ MECZ mecz1_ RODZAJSTATYSTYKI rodzajstat2_ ) ) ( WHERE ( = ( mecz1_.TERMIN mecz1_.ID_MECZU termin ) ? ) ) ( GROUP ( statystyki0_.WARTOSC statystyki0_.ID_STATYSTYKI wartosc ) ( rodzajstat2_.OPIS ( statystyki0_.ID_RODZAJUSTATYSTYKI statystyki0_.ID_STATYSTYKI rodzajStatystyki ) opis ) ( HAVING ( < ( max ( statystyki0_.WARTOSC statystyki0_.ID_STATYSTYKI wartosc ) ) ? ) ) ) )
Using FROM fragment [STATYSTYKI statystyki0_]
Using FROM fragment [inner join MECZ mecz1_ on statystyki0_.ID_MECZU=mecz1_.ID_MECZU]
Using unprocessed WHERE-fragment [statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat2_.ID_RODZAJUSTATYSTYKI]
Using processed WHERE-fragment [statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat2_.ID_RODZAJUSTATYSTYKI]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATYSTYKI,MECZ,RODZAJSTATYSTYKI)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[AGGREGATE] AggregateNode: 'max'
    |  |  \-[DOT] DotNode: 'statystyki0_.WARTOSC' {propertyName=wartosc,dereferenceType=PRIMITIVE,getPropertyPath=wartosc,path=s.wartosc,tableAlias=statystyki0_,className=data.Statystyki,classAlias=s}
    |  |     +-[ALIAS_REF] IdentNode: 'statystyki0_.ID_STATYSTYKI' {alias=s, className=data.Statystyki, tableAlias=statystyki0_}
    |  |     \-[IDENT] IdentNode: 'wartosc' {originalText=wartosc}
    |  +-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    |  +-[DOT] DotNode: 'rodzajstat2_.OPIS' {propertyName=opis,dereferenceType=PRIMITIVE,getPropertyPath=opis,path=s.rodzajStatystyki.opis,tableAlias=rodzajstat2_,className=data.RodzajStatystyki,classAlias=null}
    |  |  +-[DOT] DotNode: 'statystyki0_.ID_RODZAJUSTATYSTYKI' {propertyName=rodzajStatystyki,dereferenceType=ENTITY,getPropertyPath=rodzajStatystyki,path=s.rodzajStatystyki,tableAlias=rodzajstat2_,className=data.RodzajStatystyki,classAlias=null}
    |  |  |  +-[ALIAS_REF] IdentNode: 'statystyki0_.ID_STATYSTYKI' {alias=s, className=data.Statystyki, tableAlias=statystyki0_}
    |  |  |  \-[IDENT] IdentNode: 'rodzajStatystyki' {originalText=rodzajStatystyki}
    |  |  \-[IDENT] IdentNode: 'opis' {originalText=opis}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_1_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=3, fromElements=3, fromElementByClassAlias=[s, m], fromElementByTableAlias=[mecz1_, rodzajstat2_, statystyki0_], fromElementsByPath=[s.rodzajStatystyki, s.mecz], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'STATYSTYKI statystyki0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=STATYSTYKI,tableAlias=statystyki0_,origin=null,columns={,className=data.Statystyki}}
    |     +-[JOIN_FRAGMENT] FromElement: 'inner join MECZ mecz1_ on statystyki0_.ID_MECZU=mecz1_.ID_MECZU' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=m,role=data.Statystyki.mecz,tableName=MECZ,tableAlias=mecz1_,origin=STATYSTYKI statystyki0_,columns={statystyki0_.ID_MECZU ,className=data.Mecz}}
    |     \-[FROM_FRAGMENT] ImpliedFromElement: 'RODZAJSTATYSTYKI rodzajstat2_' ImpliedFromElement{implied,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=data.Statystyki.rodzajStatystyki,tableName=RODZAJSTATYSTYKI,tableAlias=rodzajstat2_,origin=STATYSTYKI statystyki0_,columns={statystyki0_.ID_RODZAJUSTATYSTYKI ,className=data.RodzajStatystyki}}
    +-[WHERE] SqlNode: 'WHERE'
    |  +-[THETA_JOINS] SqlNode: '{theta joins}'
    |  |  \-[SQL_TOKEN] SqlFragment: 'statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat2_.ID_RODZAJUSTATYSTYKI'
    |  \-[EQ] BinaryLogicOperatorNode: '='
    |     +-[DOT] DotNode: 'mecz1_.TERMIN' {propertyName=termin,dereferenceType=PRIMITIVE,getPropertyPath=termin,path=m.termin,tableAlias=mecz1_,className=data.Mecz,classAlias=m}
    |     |  +-[ALIAS_REF] IdentNode: 'mecz1_.ID_MECZU' {alias=m, className=data.Mecz, tableAlias=mecz1_}
    |     |  \-[IDENT] IdentNode: 'termin' {originalText=termin}
    |     \-[NAMED_PARAM] ParameterNode: '?' {name=term, expectedType=org.hibernate.type.CalendarType@31206beb}
    \-[GROUP] SqlNode: 'GROUP'
       +-[DOT] DotNode: 'statystyki0_.WARTOSC' {propertyName=wartosc,dereferenceType=PRIMITIVE,getPropertyPath=wartosc,path=s.wartosc,tableAlias=statystyki0_,className=data.Statystyki,classAlias=s}
       |  +-[ALIAS_REF] IdentNode: 'statystyki0_.ID_STATYSTYKI' {alias=s, className=data.Statystyki, tableAlias=statystyki0_}
       |  \-[IDENT] IdentNode: 'wartosc' {originalText=wartosc}
       +-[DOT] DotNode: 'rodzajstat2_.OPIS' {propertyName=opis,dereferenceType=PRIMITIVE,getPropertyPath=opis,path=s.rodzajStatystyki.opis,tableAlias=rodzajstat2_,className=data.RodzajStatystyki,classAlias=null}
       |  +-[DOT] DotNode: 'statystyki0_.ID_RODZAJUSTATYSTYKI' {propertyName=rodzajStatystyki,dereferenceType=ENTITY,getPropertyPath=rodzajStatystyki,path=s.rodzajStatystyki,tableAlias=rodzajstat2_,className=data.RodzajStatystyki,classAlias=null}
       |  |  +-[ALIAS_REF] IdentNode: 'statystyki0_.ID_STATYSTYKI' {alias=s, className=data.Statystyki, tableAlias=statystyki0_}
       |  |  \-[IDENT] IdentNode: 'rodzajStatystyki' {originalText=rodzajStatystyki}
       |  \-[IDENT] IdentNode: 'opis' {originalText=opis}
       \-[HAVING] SqlNode: 'HAVING'
          \-[LT] BinaryLogicOperatorNode: '<'
             +-[AGGREGATE] AggregateNode: 'max'
             |  \-[DOT] DotNode: 'statystyki0_.WARTOSC' {propertyName=wartosc,dereferenceType=PRIMITIVE,getPropertyPath=wartosc,path=s.wartosc,tableAlias=statystyki0_,className=data.Statystyki,classAlias=s}
             |     +-[ALIAS_REF] IdentNode: 'statystyki0_.ID_STATYSTYKI' {alias=s, className=data.Statystyki, tableAlias=statystyki0_}
             |     \-[IDENT] IdentNode: 'wartosc' {originalText=wartosc}
             \-[NAMED_PARAM] ParameterNode: '?' {name=maks, expectedType=org.hibernate.type.IntegerType@77846d2c}

throwQueryException() : no errors
HQL: Select max(s.wartosc), s.rodzajStatystyki.opis from data.Statystyki s INNER JOIN s.mecz m WHERE m.termin=:term GROUP BY s.wartosc, s.rodzajStatystyki.opis HAVING max(s.wartosc) < :maks
SQL: select max(statystyki0_.WARTOSC) as col_0_0_, rodzajstat2_.OPIS as col_1_0_ from STATYSTYKI statystyki0_ inner join MECZ mecz1_ on statystyki0_.ID_MECZU=mecz1_.ID_MECZU, RODZAJSTATYSTYKI rodzajstat2_ where statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat2_.ID_RODZAJUSTATYSTYKI and mecz1_.TERMIN=? group by statystyki0_.WARTOSC , rodzajstat2_.OPIS having max(statystyki0_.WARTOSC)<?
throwQueryException() : no errors

    select
        max(statystyki0_.WARTOSC) as col_0_0_,
        rodzajstat2_.OPIS as col_1_0_ 
    from
        STATYSTYKI statystyki0_ 
    inner join
        MECZ mecz1_ 
            on statystyki0_.ID_MECZU=mecz1_.ID_MECZU,
        RODZAJSTATYSTYKI rodzajstat2_ 
    where
        statystyki0_.ID_RODZAJUSTATYSTYKI=rodzajstat2_.ID_RODZAJUSTATYSTYKI 
        and mecz1_.TERMIN=? 
    group by
        statystyki0_.WARTOSC ,
        rodzajstat2_.OPIS 
    having
        max(statystyki0_.WARTOSC)<?
Result set row: 0
Result row: 
Result set row: 1
Result row: 
begin
HHH90000022: Hibernate's legacy org.hibernate.Criteria API is deprecated; use the JPA javax.persistence.criteria.CriteriaQuery instead

    select
        distinct this_.WARTOSC as y0_,
        rodzajstat2_.OPIS as y1_ 
    from
        STATYSTYKI this_ 
    inner join
        MECZ mecz1_ 
            on this_.ID_MECZU=mecz1_.ID_MECZU 
    inner join
        RODZAJSTATYSTYKI rodzajstat2_ 
            on this_.ID_RODZAJUSTATYSTYKI=rodzajstat2_.ID_RODZAJUSTATYSTYKI 
    where
        mecz1_.TERMIN=? 
        and this_.WARTOSC<?
Result set row: 0
Result row: 
Result set row: 1
Result row: 
